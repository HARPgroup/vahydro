beep(3)
View(intake_layer_debug)
beep(2)
beep(1)
beep(2)
#LOAD MAPPING FUNCTIONS
source(paste(vahydro_location,"R/wsp/wsp2020/FoundationDataset/geo_summaries/minorbasin.mapgen.R",sep = '/'))
source(paste(vahydro_location,"R/wsp/wsp2020/FoundationDataset/geo_summaries/minorbasin.mapgen.SINGLE.SCENARIO.R",sep = '/'))
source(paste(vahydro_location,"R/wsp/wsp2020/FoundationDataset/geo_summaries/mb.extent.R",sep = '/'))
######################################################################################################
### SCENARIO COMPARISONS #############################################################################
######################################################################################################
#----------- RUN SINGLE MAP --------------------------
minorbasin.mapgen(minorbasin = "NR",
metric = "l30_Qout",
runid_a = "runid_11",
runid_b = "runid_18",
wd_points <- "ON",
rsegs <- "ON")
library(tictoc) #time elapsed
library(beepr) #play beep sound when done running
######################################################################################################
# LOAD FILES
######################################################################################################
site <- "http://deq2.bse.vt.edu/d.dh/"
basepath <- "/var/www/R/"
source(paste(basepath,"config.local.private",sep = '/'))
#DOWNLOAD STATES AND MINOR BASIN LAYERS DIRECT FROM GITHUB
STATES <- read.table(file = 'https://raw.githubusercontent.com/HARPgroup/cbp6/master/code/GIS_LAYERS/STATES.tsv', sep = '\t', header = TRUE)
MinorBasins.csv <- read.table(file = 'https://raw.githubusercontent.com/HARPgroup/hydro-tools/master/GIS_LAYERS/MinorBasins.csv', sep = ',', header = TRUE)
#DOWNLOAD RSEG LAYER DIRECT FROM VAHYDRO
localpath <- tempdir()
filename <- paste("vahydro_riversegs_export.csv",sep="")
destfile <- paste(localpath,filename,sep="\\")
download.file(paste(site,"vahydro_riversegs_export",sep=""), destfile = destfile, method = "libcurl")
RSeg.csv <- read.csv(file=paste(localpath , filename,sep="\\"), header=TRUE, sep=",")
MajorRivers.csv <- read.table(file = 'https://raw.githubusercontent.com/HARPgroup/hydro-tools/master/GIS_LAYERS/MajorRivers.csv', sep = ',', header = TRUE)
#MajorRivers.csv <- read.table(file = 'https://raw.githubusercontent.com/HARPgroup/hydro-tools/rivnames/GIS_LAYERS/MajorRivers.csv', sep = ',', header = TRUE)
#DOWNLOAD FIPS LAYER DIRECT FROM VAHYDRO
fips_filename <- paste("vahydro_usafips_export.csv",sep="")
fips_destfile <- paste(localpath,fips_filename,sep="\\")
download.file(paste(site,"usafips_centroid_export",sep=""), destfile = fips_destfile, method = "libcurl")
fips.csv <- read.csv(file=paste(localpath , fips_filename,sep="\\"), header=TRUE, sep=",")
#LOAD RAW mp.all FILE
mp.all <- read.csv(paste(folder,"wsp2020.mp.all.MinorBasins_RSegs.csv",sep=""))
#LOAD MAPPING FUNCTIONS
source(paste(vahydro_location,"R/wsp/wsp2020/FoundationDataset/geo_summaries/minorbasin.mapgen.R",sep = '/'))
source(paste(vahydro_location,"R/wsp/wsp2020/FoundationDataset/geo_summaries/minorbasin.mapgen.SINGLE.SCENARIO.R",sep = '/'))
source(paste(vahydro_location,"R/wsp/wsp2020/FoundationDataset/geo_summaries/mb.extent.R",sep = '/'))
minorbasin <- c("NR", "YP", "EL", "TU", "RL", "OR", "PU", "RU", "YM", "JA", "MN", "PM", "YL", "BS", "PL", "OD", "JU", "JB", "JL","PS","ES")
metric <- c("l30_Qout","l90_Qout","7q10")
runid_a <- "runid_11" # NOTE: LOOP ONLY ACCEPTS A SINGLE runid_a
runid_b <- c("runid_12","runid_13","runid_18")
wd_points <- "ON" #TURN WITHDRAWAL POINTS "ON" OR "OFF"
rsegs <- "ON"    #TURN RSEGS "ON" OR "OFF" - ONLY USED IF wd_points = "ON"
tic("Total")
it <- 1 #INITIALIZE ITERATION FOR PRINTING IN LOOP
for (mb in minorbasin) {
print(paste("PROCESSING MINOR BASIN ",it," OF ",length(minorbasin),": ",mb,sep=""))
for (met in metric) {
print(paste("...PROCESSING METRIC: ",met,sep=""))
for (rb in runid_b) {
print(paste("......PROCESSING runid_b: ",rb,sep=""))
minorbasin.mapgen(mb,met,runid_a,rb,wd_points,rsegs)
} #CLOSE runid FOR LOOP
} #CLOSE metric FOR LOOP
it <- it + 1
} #CLOSE minorbasin FOR LOOP
toc()
beep(3)
mp.all.test <- mp.all
div <- c(0.5,1.0,2.0,5.0,10,25,50,100,1000)
bins_sql <-  paste("SELECT *,
CASE WHEN demand_metric <= ",div[1]," THEN '1'
WHEN demand_metric >  ",div[1]," AND demand_metric <= ",div[2]," THEN '2'
WHEN demand_metric >  ",div[2]," AND demand_metric <= ",div[3]," THEN '3'
WHEN demand_metric >  ",div[3]," AND demand_metric <= ",div[4]," THEN '4'
WHEN demand_metric >  ",div[4]," AND demand_metric <= ",div[5]," THEN '5'
WHEN demand_metric > ",div[5]," AND demand_metric <= ",div[6]," THEN '6'
WHEN demand_metric > ",div[6]," AND demand_metric <= ",div[7]," THEN '7'
WHEN demand_metric > ",div[7]," AND demand_metric <= ",div[8]," THEN '8'
WHEN demand_metric > ",div[8]," AND demand_metric <= ",div[9]," THEN '9'
WHEN demand_metric > ",div[9]," THEN '10'
ELSE 'X'
END AS bin
FROM mp.all.test",sep="")
mp.all.test <- sqldf(bins_sql)
mp_layer_test <- mp.all
mp_layer_test <- mp.all
#DIVISIONS IN MGD
div <- c(0.5,1.0,2.0,5.0,10,25,50,100,1000)
bins_test_sql <-  paste("SELECT *,
CASE WHEN demand_metric <= ",div[1]," THEN '1'
WHEN demand_metric >  ",div[1]," AND demand_metric <= ",div[2]," THEN '2'
WHEN demand_metric >  ",div[2]," AND demand_metric <= ",div[3]," THEN '3'
WHEN demand_metric >  ",div[3]," AND demand_metric <= ",div[4]," THEN '4'
WHEN demand_metric >  ",div[4]," AND demand_metric <= ",div[5]," THEN '5'
WHEN demand_metric > ",div[5]," AND demand_metric <= ",div[6]," THEN '6'
WHEN demand_metric > ",div[6]," AND demand_metric <= ",div[7]," THEN '7'
WHEN demand_metric > ",div[7]," AND demand_metric <= ",div[8]," THEN '8'
WHEN demand_metric > ",div[8]," AND demand_metric <= ",div[9]," THEN '9'
WHEN demand_metric > ",div[9]," THEN '10'
ELSE 'X'
END AS bin
FROM mp_layer_test",sep="")
mp_layer_test <- sqldf(bins_test_sql)
mp_layer  <- mp.all
mp_layer_nohydro <- paste("SELECT *
FROM mp_layer
WHERE facility_ftype NOT LIKE '%power%'")
#WHERE facility_ftype != 'hydropower'")
mp_layer <- sqldf(mp_layer_nohydro)
mp_layer$mp_exempt_mgy <- mp_layer$final_exempt_propvalue_mgd*365.25
demand_query_param <-case_when(runid_b == "runid_12" ~ "mp_2030_mgy",
runid_b == "runid_13" ~ "mp_2040_mgy",
runid_b == "runid_14" ~ "mp_2020_mgy",
runid_b == "runid_15" ~ "mp_2020_mgy",
runid_b == "runid_16" ~ "mp_2020_mgy",
runid_b == "runid_17" ~ "mp_2040_mgy",
runid_b == "runid_18" ~ "mp_exempt_mgy",
runid_b == "runid_19" ~ "mp_2040_mgy",
runid_b == "runid_20" ~ "mp_2040_mgy")
#mp_layer_sql <- paste('SELECT *, round(',demand_query_param,'/365.25,3) AS demand_metric
mp_layer_sql <- paste('SELECT *, ',demand_query_param,'/365.25 AS demand_metric
FROM mp_layer'
,sep="")
mp_layer <- sqldf(mp_layer_sql)
div <- c(0.5,1.0,2.0,5.0,10,25,50,100,1000)
bins_sql <-  paste("SELECT *,
CASE WHEN demand_metric <= ",div[1]," THEN '1'
WHEN demand_metric >  ",div[1]," AND demand_metric <= ",div[2]," THEN '2'
WHEN demand_metric >  ",div[2]," AND demand_metric <= ",div[3]," THEN '3'
WHEN demand_metric >  ",div[3]," AND demand_metric <= ",div[4]," THEN '4'
WHEN demand_metric >  ",div[4]," AND demand_metric <= ",div[5]," THEN '5'
WHEN demand_metric > ",div[5]," AND demand_metric <= ",div[6]," THEN '6'
WHEN demand_metric > ",div[6]," AND demand_metric <= ",div[7]," THEN '7'
WHEN demand_metric > ",div[7]," AND demand_metric <= ",div[8]," THEN '8'
WHEN demand_metric > ",div[8]," AND demand_metric <= ",div[9]," THEN '9'
WHEN demand_metric > ",div[9]," THEN '10'
ELSE 'X'
END AS bin
FROM mp_layer",sep="")
mp_layer <- sqldf(bins_sql)
View(mp_layer)
library(tictoc) #time elapsed
library(beepr) #play beep sound when done running
######################################################################################################
# LOAD FILES
######################################################################################################
site <- "http://deq2.bse.vt.edu/d.dh/"
basepath <- "/var/www/R/"
source(paste(basepath,"config.local.private",sep = '/'))
#DOWNLOAD STATES AND MINOR BASIN LAYERS DIRECT FROM GITHUB
STATES <- read.table(file = 'https://raw.githubusercontent.com/HARPgroup/cbp6/master/code/GIS_LAYERS/STATES.tsv', sep = '\t', header = TRUE)
MinorBasins.csv <- read.table(file = 'https://raw.githubusercontent.com/HARPgroup/hydro-tools/master/GIS_LAYERS/MinorBasins.csv', sep = ',', header = TRUE)
#DOWNLOAD RSEG LAYER DIRECT FROM VAHYDRO
localpath <- tempdir()
filename <- paste("vahydro_riversegs_export.csv",sep="")
destfile <- paste(localpath,filename,sep="\\")
download.file(paste(site,"vahydro_riversegs_export",sep=""), destfile = destfile, method = "libcurl")
RSeg.csv <- read.csv(file=paste(localpath , filename,sep="\\"), header=TRUE, sep=",")
MajorRivers.csv <- read.table(file = 'https://raw.githubusercontent.com/HARPgroup/hydro-tools/master/GIS_LAYERS/MajorRivers.csv', sep = ',', header = TRUE)
#MajorRivers.csv <- read.table(file = 'https://raw.githubusercontent.com/HARPgroup/hydro-tools/rivnames/GIS_LAYERS/MajorRivers.csv', sep = ',', header = TRUE)
#DOWNLOAD FIPS LAYER DIRECT FROM VAHYDRO
fips_filename <- paste("vahydro_usafips_export.csv",sep="")
fips_destfile <- paste(localpath,fips_filename,sep="\\")
download.file(paste(site,"usafips_centroid_export",sep=""), destfile = fips_destfile, method = "libcurl")
fips.csv <- read.csv(file=paste(localpath , fips_filename,sep="\\"), header=TRUE, sep=",")
#LOAD RAW mp.all FILE
mp.all <- read.csv(paste(folder,"wsp2020.mp.all.MinorBasins_RSegs.csv",sep=""))
#LOAD MAPPING FUNCTIONS
source(paste(vahydro_location,"R/wsp/wsp2020/FoundationDataset/geo_summaries/minorbasin.mapgen.R",sep = '/'))
source(paste(vahydro_location,"R/wsp/wsp2020/FoundationDataset/geo_summaries/minorbasin.mapgen.SINGLE.SCENARIO.R",sep = '/'))
source(paste(vahydro_location,"R/wsp/wsp2020/FoundationDataset/geo_summaries/mb.extent.R",sep = '/'))
mp_layer  <- mp.all
# #REMOVE POWER
mp_layer_nohydro <- paste("SELECT *
FROM mp_layer
WHERE facility_ftype NOT LIKE '%power%'")
#WHERE facility_ftype != 'hydropower'")
mp_layer <- sqldf(mp_layer_nohydro)
mp_layer$mp_exempt_mgy <- mp_layer$final_exempt_propvalue_mgd*365.25
demand_query_param <-case_when(runid_b == "runid_12" ~ "mp_2030_mgy",
runid_b == "runid_13" ~ "mp_2040_mgy",
runid_b == "runid_14" ~ "mp_2020_mgy",
runid_b == "runid_15" ~ "mp_2020_mgy",
runid_b == "runid_16" ~ "mp_2020_mgy",
runid_b == "runid_17" ~ "mp_2040_mgy",
runid_b == "runid_18" ~ "mp_exempt_mgy",
runid_b == "runid_19" ~ "mp_2040_mgy",
runid_b == "runid_20" ~ "mp_2040_mgy")
runid_b == "runid_18"
runid_b <- "runid_18"
mp_layer  <- mp.all
runid_b <- "runid_18"
# #REMOVE POWER
mp_layer_nohydro <- paste("SELECT *
FROM mp_layer
WHERE facility_ftype NOT LIKE '%power%'")
#WHERE facility_ftype != 'hydropower'")
mp_layer <- sqldf(mp_layer_nohydro)
mp_layer$mp_exempt_mgy <- mp_layer$final_exempt_propvalue_mgd*365.25
demand_query_param <-case_when(runid_b == "runid_12" ~ "mp_2030_mgy",
runid_b == "runid_13" ~ "mp_2040_mgy",
runid_b == "runid_14" ~ "mp_2020_mgy",
runid_b == "runid_15" ~ "mp_2020_mgy",
runid_b == "runid_16" ~ "mp_2020_mgy",
runid_b == "runid_17" ~ "mp_2040_mgy",
runid_b == "runid_18" ~ "mp_exempt_mgy",
runid_b == "runid_19" ~ "mp_2040_mgy",
runid_b == "runid_20" ~ "mp_2040_mgy")
#mp_layer_sql <- paste('SELECT *, round(',demand_query_param,'/365.25,3) AS demand_metric
mp_layer_sql <- paste('SELECT *, ',demand_query_param,'/365.25 AS demand_metric
FROM mp_layer'
,sep="")
mp_layer <- sqldf(mp_layer_sql)
#DIVISIONS IN MGD
div <- c(0.5,1.0,2.0,5.0,10,25,50,100,1000)
bins_sql <-  paste("SELECT *,
CASE WHEN demand_metric <= ",div[1]," THEN '1'
WHEN demand_metric >  ",div[1]," AND demand_metric <= ",div[2]," THEN '2'
WHEN demand_metric >  ",div[2]," AND demand_metric <= ",div[3]," THEN '3'
WHEN demand_metric >  ",div[3]," AND demand_metric <= ",div[4]," THEN '4'
WHEN demand_metric >  ",div[4]," AND demand_metric <= ",div[5]," THEN '5'
WHEN demand_metric > ",div[5]," AND demand_metric <= ",div[6]," THEN '6'
WHEN demand_metric > ",div[6]," AND demand_metric <= ",div[7]," THEN '7'
WHEN demand_metric > ",div[7]," AND demand_metric <= ",div[8]," THEN '8'
WHEN demand_metric > ",div[8]," AND demand_metric <= ",div[9]," THEN '9'
WHEN demand_metric > ",div[9]," THEN '10'
ELSE 'X'
END AS bin
FROM mp_layer",sep="")
mp_layer <- sqldf(bins_sql)
View(mp_layer)
library(tictoc) #time elapsed
library(beepr) #play beep sound when done running
######################################################################################################
# LOAD FILES
######################################################################################################
site <- "http://deq2.bse.vt.edu/d.dh/"
basepath <- "/var/www/R/"
source(paste(basepath,"config.local.private",sep = '/'))
#DOWNLOAD STATES AND MINOR BASIN LAYERS DIRECT FROM GITHUB
STATES <- read.table(file = 'https://raw.githubusercontent.com/HARPgroup/cbp6/master/code/GIS_LAYERS/STATES.tsv', sep = '\t', header = TRUE)
MinorBasins.csv <- read.table(file = 'https://raw.githubusercontent.com/HARPgroup/hydro-tools/master/GIS_LAYERS/MinorBasins.csv', sep = ',', header = TRUE)
#DOWNLOAD RSEG LAYER DIRECT FROM VAHYDRO
localpath <- tempdir()
filename <- paste("vahydro_riversegs_export.csv",sep="")
destfile <- paste(localpath,filename,sep="\\")
download.file(paste(site,"vahydro_riversegs_export",sep=""), destfile = destfile, method = "libcurl")
RSeg.csv <- read.csv(file=paste(localpath , filename,sep="\\"), header=TRUE, sep=",")
MajorRivers.csv <- read.table(file = 'https://raw.githubusercontent.com/HARPgroup/hydro-tools/master/GIS_LAYERS/MajorRivers.csv', sep = ',', header = TRUE)
#MajorRivers.csv <- read.table(file = 'https://raw.githubusercontent.com/HARPgroup/hydro-tools/rivnames/GIS_LAYERS/MajorRivers.csv', sep = ',', header = TRUE)
#DOWNLOAD FIPS LAYER DIRECT FROM VAHYDRO
fips_filename <- paste("vahydro_usafips_export.csv",sep="")
fips_destfile <- paste(localpath,fips_filename,sep="\\")
download.file(paste(site,"usafips_centroid_export",sep=""), destfile = fips_destfile, method = "libcurl")
fips.csv <- read.csv(file=paste(localpath , fips_filename,sep="\\"), header=TRUE, sep=",")
#LOAD RAW mp.all FILE
mp.all <- read.csv(paste(folder,"wsp2020.mp.all.MinorBasins_RSegs.csv",sep=""))
#LOAD MAPPING FUNCTIONS
source(paste(vahydro_location,"R/wsp/wsp2020/FoundationDataset/geo_summaries/minorbasin.mapgen.R",sep = '/'))
source(paste(vahydro_location,"R/wsp/wsp2020/FoundationDataset/geo_summaries/minorbasin.mapgen.SINGLE.SCENARIO.R",sep = '/'))
source(paste(vahydro_location,"R/wsp/wsp2020/FoundationDataset/geo_summaries/mb.extent.R",sep = '/'))
minorbasin <- c("NR", "YP", "EL", "TU", "RL", "OR", "PU", "RU", "YM", "JA", "MN", "PM", "YL", "BS", "PL", "OD", "JU", "JB", "JL","PS","ES")
metric <- c("l30_Qout","l90_Qout","7q10")
runid_a <- "runid_11" # NOTE: LOOP ONLY ACCEPTS A SINGLE runid_a
runid_b <- c("runid_12","runid_13","runid_18")
wd_points <- "ON" #TURN WITHDRAWAL POINTS "ON" OR "OFF"
rsegs <- "ON"    #TURN RSEGS "ON" OR "OFF" - ONLY USED IF wd_points = "ON"
tic("Total")
it <- 1 #INITIALIZE ITERATION FOR PRINTING IN LOOP
for (mb in minorbasin) {
print(paste("PROCESSING MINOR BASIN ",it," OF ",length(minorbasin),": ",mb,sep=""))
for (met in metric) {
print(paste("...PROCESSING METRIC: ",met,sep=""))
for (rb in runid_b) {
print(paste("......PROCESSING runid_b: ",rb,sep=""))
minorbasin.mapgen(mb,met,runid_a,rb,wd_points,rsegs)
} #CLOSE runid FOR LOOP
} #CLOSE metric FOR LOOP
it <- it + 1
} #CLOSE minorbasin FOR LOOP
toc()
beep(3)
library(tictoc) #time elapsed
library(beepr) #play beep sound when done running
######################################################################################################
# LOAD FILES
######################################################################################################
site <- "http://deq2.bse.vt.edu/d.dh/"
basepath <- "/var/www/R/"
source(paste(basepath,"config.local.private",sep = '/'))
#DOWNLOAD STATES AND MINOR BASIN LAYERS DIRECT FROM GITHUB
STATES <- read.table(file = 'https://raw.githubusercontent.com/HARPgroup/cbp6/master/code/GIS_LAYERS/STATES.tsv', sep = '\t', header = TRUE)
MinorBasins.csv <- read.table(file = 'https://raw.githubusercontent.com/HARPgroup/hydro-tools/master/GIS_LAYERS/MinorBasins.csv', sep = ',', header = TRUE)
#DOWNLOAD RSEG LAYER DIRECT FROM VAHYDRO
localpath <- tempdir()
filename <- paste("vahydro_riversegs_export.csv",sep="")
destfile <- paste(localpath,filename,sep="\\")
download.file(paste(site,"vahydro_riversegs_export",sep=""), destfile = destfile, method = "libcurl")
RSeg.csv <- read.csv(file=paste(localpath , filename,sep="\\"), header=TRUE, sep=",")
MajorRivers.csv <- read.table(file = 'https://raw.githubusercontent.com/HARPgroup/hydro-tools/master/GIS_LAYERS/MajorRivers.csv', sep = ',', header = TRUE)
#MajorRivers.csv <- read.table(file = 'https://raw.githubusercontent.com/HARPgroup/hydro-tools/rivnames/GIS_LAYERS/MajorRivers.csv', sep = ',', header = TRUE)
#DOWNLOAD FIPS LAYER DIRECT FROM VAHYDRO
fips_filename <- paste("vahydro_usafips_export.csv",sep="")
fips_destfile <- paste(localpath,fips_filename,sep="\\")
download.file(paste(site,"usafips_centroid_export",sep=""), destfile = fips_destfile, method = "libcurl")
fips.csv <- read.csv(file=paste(localpath , fips_filename,sep="\\"), header=TRUE, sep=",")
#LOAD RAW mp.all FILE
mp.all <- read.csv(paste(folder,"wsp2020.mp.all.MinorBasins_RSegs.csv",sep=""))
#LOAD MAPPING FUNCTIONS
source(paste(vahydro_location,"R/wsp/wsp2020/FoundationDataset/geo_summaries/minorbasin.mapgen.R",sep = '/'))
source(paste(vahydro_location,"R/wsp/wsp2020/FoundationDataset/geo_summaries/minorbasin.mapgen.SINGLE.SCENARIO.R",sep = '/'))
source(paste(vahydro_location,"R/wsp/wsp2020/FoundationDataset/geo_summaries/mb.extent.R",sep = '/'))
#ALL 21 MINOR BASINS (189 figs)
minorbasin <- c("NR", "YP", "EL", "TU", "RL", "OR", "PU", "RU", "YM", "JA", "MN", "PM", "YL", "BS", "PL", "OD", "JU", "JB", "JL","PS","ES")
metric <- c("l30_Qout","l90_Qout","7q10")
runid_a <- "runid_11" # NOTE: LOOP ONLY ACCEPTS A SINGLE runid_a
runid_b <- c("runid_12","runid_13","runid_18")
wd_points <- "ON" #TURN WITHDRAWAL POINTS "ON" OR "OFF"
rsegs <- "ON"
tic("Total")
it <- 1 #INITIALIZE ITERATION FOR PRINTING IN LOOP
for (mb in minorbasin) {
print(paste("PROCESSING MINOR BASIN ",it," OF ",length(minorbasin),": ",mb,sep=""))
for (met in metric) {
print(paste("...PROCESSING METRIC: ",met,sep=""))
for (rb in runid_b) {
print(paste("......PROCESSING runid_b: ",rb,sep=""))
minorbasin.mapgen(mb,met,runid_a,rb,wd_points,rsegs)
} #CLOSE runid FOR LOOP
} #CLOSE metric FOR LOOP
it <- it + 1
} #CLOSE minorbasin FOR LOOP
toc()
beep(3)
View(mp.all)
minorbasin <- c("YP", "EL", "RL", "PU", "RU", "YM", "JA", "PM", "YL", "PL", "JU", "JB", "JL","PS","ES")
metric <- c("l30_cc_Qout", "l90_cc_Qout")
runid_a <- "runid_11" # NOTE: LOOP ONLY ACCEPTS A SINGLE runid_a
runid_b <- c("runid_17","runid_19","runid_20")
wd_points <- "ON" #TURN WITHDRAWAL POINTS "ON" OR "OFF"
rsegs <- "ON"    #TURN RSEGS "ON" OR "OFF" - ONLY USED IF wd_points = "ON"
tic("Total")
it <- 1 #INITIALIZE ITERATION FOR PRINTING IN LOOP
for (mb in minorbasin) {
print(paste("PROCESSING MINOR BASIN ",it," OF ",length(minorbasin),": ",mb,sep=""))
for (met in metric) {
print(paste("...PROCESSING METRIC: ",met,sep=""))
for (rb in runid_b) {
print(paste("......PROCESSING runid_b: ",rb,sep=""))
minorbasin.mapgen(mb,met,runid_a,rb,wd_points,rsegs)
} #CLOSE runid FOR LOOP
} #CLOSE metric FOR LOOP
it <- it + 1
} #CLOSE minorbasin FOR LOOP
toc()
beep(3)
#----------- RUN SINGLE MAP --------------------------
minorbasin.mapgen(minorbasin = "PL",
metric = "l30_Qout",
runid_a = "runid_11",
runid_b = "runid_18",
wd_points <- "ON",
rsegs <- "ON")
#----------- RUN SINGLE MAP --------------------------
minorbasin.mapgen(minorbasin = "PL",
metric = "l30_Qout",
runid_a = "runid_11",
runid_b = "runid_18",
wd_points <- "ON",
rsegs <- "ON")
#LOAD MAPPING FUNCTIONS
source(paste(vahydro_location,"R/wsp/wsp2020/FoundationDataset/geo_summaries/minorbasin.mapgen.R",sep = '/'))
source(paste(vahydro_location,"R/wsp/wsp2020/FoundationDataset/geo_summaries/minorbasin.mapgen.SINGLE.SCENARIO.R",sep = '/'))
source(paste(vahydro_location,"R/wsp/wsp2020/FoundationDataset/geo_summaries/mb.extent.R",sep = '/'))
######################################################################################################
### SCENARIO COMPARISONS #############################################################################
######################################################################################################
#----------- RUN SINGLE MAP --------------------------
minorbasin.mapgen(minorbasin = "PL",
metric = "l30_Qout",
runid_a = "runid_11",
runid_b = "runid_18",
wd_points <- "ON",
rsegs <- "ON")
View(intake_layer_debug)
mp_layer  <- mp.all
runid_b <- "runid_18"
# #REMOVE POWER
mp_layer_nohydro <- paste("SELECT *
FROM mp_layer
WHERE facility_ftype NOT LIKE '%power%'")
#WHERE facility_ftype != 'hydropower'")
mp_layer <- sqldf(mp_layer_nohydro)
mp_layer$mp_exempt_mgy <- mp_layer$final_exempt_propvalue_mgd*365.25
demand_query_param <-case_when(runid_b == "runid_12" ~ "mp_2030_mgy",
runid_b == "runid_13" ~ "mp_2040_mgy",
runid_b == "runid_14" ~ "mp_2020_mgy",
runid_b == "runid_15" ~ "mp_2020_mgy",
runid_b == "runid_16" ~ "mp_2020_mgy",
runid_b == "runid_17" ~ "mp_2040_mgy",
runid_b == "runid_18" ~ "mp_exempt_mgy",
runid_b == "runid_19" ~ "mp_2040_mgy",
runid_b == "runid_20" ~ "mp_2040_mgy")
#mp_layer_sql <- paste('SELECT *, round(',demand_query_param,'/365.25,3) AS demand_metric
mp_layer_sql <- paste('SELECT *, ',demand_query_param,'/365.25 AS demand_metric
FROM mp_layer'
,sep="")
mp_layer <- sqldf(mp_layer_sql)
#DIVISIONS IN MGD
div <- c(0.5,1.0,2.0,5.0,10,25,50,100,1000)
bins_sql <-  paste("SELECT *,
CASE WHEN demand_metric <= ",div[1]," THEN '1'
WHEN demand_metric >  ",div[1]," AND demand_metric <= ",div[2]," THEN '2'
WHEN demand_metric >  ",div[2]," AND demand_metric <= ",div[3]," THEN '3'
WHEN demand_metric >  ",div[3]," AND demand_metric <= ",div[4]," THEN '4'
WHEN demand_metric >  ",div[4]," AND demand_metric <= ",div[5]," THEN '5'
WHEN demand_metric > ",div[5]," AND demand_metric <= ",div[6]," THEN '6'
WHEN demand_metric > ",div[6]," AND demand_metric <= ",div[7]," THEN '7'
WHEN demand_metric > ",div[7]," AND demand_metric <= ",div[8]," THEN '8'
WHEN demand_metric > ",div[8]," AND demand_metric <= ",div[9]," THEN '9'
WHEN demand_metric > ",div[9]," THEN '10'
ELSE 'X'
END AS bin
FROM mp_layer",sep="")
mp_layer <- sqldf(bins_sql)
View(mp_layer)
library(tictoc) #time elapsed
library(beepr) #play beep sound when done running
######################################################################################################
# LOAD FILES
######################################################################################################
site <- "http://deq2.bse.vt.edu/d.dh/"
basepath <- "/var/www/R/"
source(paste(basepath,"config.local.private",sep = '/'))
#DOWNLOAD STATES AND MINOR BASIN LAYERS DIRECT FROM GITHUB
STATES <- read.table(file = 'https://raw.githubusercontent.com/HARPgroup/cbp6/master/code/GIS_LAYERS/STATES.tsv', sep = '\t', header = TRUE)
MinorBasins.csv <- read.table(file = 'https://raw.githubusercontent.com/HARPgroup/hydro-tools/master/GIS_LAYERS/MinorBasins.csv', sep = ',', header = TRUE)
#DOWNLOAD RSEG LAYER DIRECT FROM VAHYDRO
localpath <- tempdir()
filename <- paste("vahydro_riversegs_export.csv",sep="")
destfile <- paste(localpath,filename,sep="\\")
download.file(paste(site,"vahydro_riversegs_export",sep=""), destfile = destfile, method = "libcurl")
RSeg.csv <- read.csv(file=paste(localpath , filename,sep="\\"), header=TRUE, sep=",")
MajorRivers.csv <- read.table(file = 'https://raw.githubusercontent.com/HARPgroup/hydro-tools/master/GIS_LAYERS/MajorRivers.csv', sep = ',', header = TRUE)
#MajorRivers.csv <- read.table(file = 'https://raw.githubusercontent.com/HARPgroup/hydro-tools/rivnames/GIS_LAYERS/MajorRivers.csv', sep = ',', header = TRUE)
#DOWNLOAD FIPS LAYER DIRECT FROM VAHYDRO
fips_filename <- paste("vahydro_usafips_export.csv",sep="")
fips_destfile <- paste(localpath,fips_filename,sep="\\")
download.file(paste(site,"usafips_centroid_export",sep=""), destfile = fips_destfile, method = "libcurl")
fips.csv <- read.csv(file=paste(localpath , fips_filename,sep="\\"), header=TRUE, sep=",")
#LOAD RAW mp.all FILE
mp.all <- read.csv(paste(folder,"wsp2020.mp.all.MinorBasins_RSegs.csv",sep=""))
#LOAD MAPPING FUNCTIONS
source(paste(vahydro_location,"R/wsp/wsp2020/FoundationDataset/geo_summaries/minorbasin.mapgen.R",sep = '/'))
source(paste(vahydro_location,"R/wsp/wsp2020/FoundationDataset/geo_summaries/minorbasin.mapgen.SINGLE.SCENARIO.R",sep = '/'))
source(paste(vahydro_location,"R/wsp/wsp2020/FoundationDataset/geo_summaries/mb.extent.R",sep = '/'))
minorbasin.mapgen(minorbasin = "PL",
metric = "l30_Qout",
runid_a = "runid_11",
runid_b = "runid_18",
wd_points <- "ON",
rsegs <- "ON")
minorbasin.mapgen(minorbasin = "PL",
metric = "l30_Qout",
runid_a = "runid_11",
runid_b = "runid_18",
wd_points <- "OFF",
rsegs <- "ON")
source(paste(vahydro_location,"R/wsp/wsp2020/FoundationDataset/geo_summaries/minorbasin.mapgen.R",sep = '/'))
source(paste(vahydro_location,"R/wsp/wsp2020/FoundationDataset/geo_summaries/minorbasin.mapgen.SINGLE.SCENARIO.R",sep = '/'))
source(paste(vahydro_location,"R/wsp/wsp2020/FoundationDataset/geo_summaries/mb.extent.R",sep = '/'))
######################################################################################################
### SCENARIO COMPARISONS #############################################################################
######################################################################################################
#----------- RUN SINGLE MAP --------------------------
minorbasin.mapgen(minorbasin = "PL",
metric = "l30_Qout",
runid_a = "runid_11",
runid_b = "runid_18",
wd_points <- "OFF",
rsegs <- "ON")
#LOAD MAPPING FUNCTIONS
source(paste(vahydro_location,"R/wsp/wsp2020/FoundationDataset/geo_summaries/minorbasin.mapgen.R",sep = '/'))
source(paste(vahydro_location,"R/wsp/wsp2020/FoundationDataset/geo_summaries/minorbasin.mapgen.SINGLE.SCENARIO.R",sep = '/'))
source(paste(vahydro_location,"R/wsp/wsp2020/FoundationDataset/geo_summaries/mb.extent.R",sep = '/'))
######################################################################################################
### SCENARIO COMPARISONS #############################################################################
######################################################################################################
#----------- RUN SINGLE MAP --------------------------
minorbasin.mapgen(minorbasin = "PL",
metric = "l30_Qout",
runid_a = "runid_11",
runid_b = "runid_18",
wd_points <- "ON",
rsegs <- "OFF")
#LOAD MAPPING FUNCTIONS
source(paste(vahydro_location,"R/wsp/wsp2020/FoundationDataset/geo_summaries/minorbasin.mapgen.R",sep = '/'))
source(paste(vahydro_location,"R/wsp/wsp2020/FoundationDataset/geo_summaries/minorbasin.mapgen.SINGLE.SCENARIO.R",sep = '/'))
source(paste(vahydro_location,"R/wsp/wsp2020/FoundationDataset/geo_summaries/mb.extent.R",sep = '/'))
######################################################################################################
### SCENARIO COMPARISONS #############################################################################
######################################################################################################
#----------- RUN SINGLE MAP --------------------------
minorbasin.mapgen(minorbasin = "PL",
metric = "l30_Qout",
runid_a = "runid_11",
runid_b = "runid_18",
wd_points <- "ON",
rsegs <- "OFF")

hydrocode NOT LIKE 'vahydrosw_wshed_RL%_0000' AND
hydrocode NOT LIKE 'vahydrosw_wshed_YL%_0000' AND
hydrocode NOT LIKE 'vahydrosw_wshed_YM%_0000' AND
hydrocode NOT LIKE 'vahydrosw_wshed_YP%_0000' AND
hydrocode NOT LIKE 'vahydrosw_wshed_EL%_0000' AND
hydrocode NOT LIKE 'vahydrosw_wshed_JB%_0000' AND
hydrocode NOT LIKE 'vahydrosw_wshed_MN%_0000' AND
hydrocode NOT LIKE 'vahydrosw_wshed_ES%_0000'
")
elfgen_dataset_11 <- sqldf(RSeg_tidal)
print(length(elfgen_dataset_11[,1]))
#write.csv(elfgen_dataset_11,paste0(export_path,"tables_maps\\Xfigures\\","elfgen_dataset","_",runid,"_",huc_level,"_",richness_chg,".csv"), row.names = FALSE)
#------------------------------------------------------------------------------
# REMOVE ANY WITH Rseg Outlet MAF > breakpt
print(length(elfgen_dataset_11[,1]))
print("REMOVING SEGMENTS TO THE RIGHT OF BREAKPOINT")
rm_Right_Of_bkpt <- paste('SELECT *
FROM elfgen_dataset_11
WHERE Rseg_Outlet_MAF < breakpt
ORDER BY hydroid ASC
',sep = '')
elfgen_dataset_11 <- sqldf(rm_Right_Of_bkpt)
print(length(elfgen_dataset_11[,1]))
write.csv(elfgen_dataset_11,paste0(export_path,"tables_maps\\Xfigures\\","elfgen_dataset","_",runid,"_",huc_level,"_",richness_chg,".csv"), row.names = FALSE)
#------------------------------------------------------------------------------
#-------
runid <- "runid_18"
huc_level <- "huc8"
richness_chg <- "richness_change_abs"
elfgen_dataset_11 <- read.csv(paste(site,"vahydro_riversegs_elfgen_export?propname=",runid,"&propname_2=elfgen_EDAS_",huc_level,"&propname_3=",richness_chg,sep=""))
#------------------------------------------------------------------------------
# ADD QA COLUMNS
QA_cols <- paste("SELECT *,
Rseg_Outlet_MAF AS nhdplus_MAF,
Qout AS model_Qout,
Qout-Rseg_Outlet_MAF AS DIFF,
abs(((Qout-Rseg_Outlet_MAF)/Rseg_Outlet_MAF)*100) AS 'Diff_%'
FROM elfgen_dataset_11
ORDER BY abs(((Qout-Rseg_Outlet_MAF)/Rseg_Outlet_MAF)*100) DESC
")
elfgen_dataset_11 <- sqldf(QA_cols)
#------------------------------------------------------------------------------
# REMOVE TIDAL SEGMENTS
print(length(elfgen_dataset_11[,1]))
print("REMOVING TIDAL SEGMENTS")
RSeg_tidal <- paste("SELECT *
FROM elfgen_dataset_11
WHERE hydrocode NOT LIKE 'vahydrosw_wshed_JA%_0000' AND
hydrocode NOT LIKE 'vahydrosw_wshed_PL%_0000' AND
hydrocode NOT LIKE 'vahydrosw_wshed_RL%_0000' AND
hydrocode NOT LIKE 'vahydrosw_wshed_YL%_0000' AND
hydrocode NOT LIKE 'vahydrosw_wshed_YM%_0000' AND
hydrocode NOT LIKE 'vahydrosw_wshed_YP%_0000' AND
hydrocode NOT LIKE 'vahydrosw_wshed_EL%_0000' AND
hydrocode NOT LIKE 'vahydrosw_wshed_JB%_0000' AND
hydrocode NOT LIKE 'vahydrosw_wshed_MN%_0000' AND
hydrocode NOT LIKE 'vahydrosw_wshed_ES%_0000'
")
elfgen_dataset_11 <- sqldf(RSeg_tidal)
print(length(elfgen_dataset_11[,1]))
#write.csv(elfgen_dataset_11,paste0(export_path,"tables_maps\\Xfigures\\","elfgen_dataset","_",runid,"_",huc_level,"_",richness_chg,".csv"), row.names = FALSE)
#------------------------------------------------------------------------------
# REMOVE ANY WITH Rseg Outlet MAF > breakpt
print(length(elfgen_dataset_11[,1]))
print("REMOVING SEGMENTS TO THE RIGHT OF BREAKPOINT")
rm_Right_Of_bkpt <- paste('SELECT *
FROM elfgen_dataset_11
WHERE Rseg_Outlet_MAF < breakpt
ORDER BY hydroid ASC
',sep = '')
elfgen_dataset_11 <- sqldf(rm_Right_Of_bkpt)
print(length(elfgen_dataset_11[,1]))
write.csv(elfgen_dataset_11,paste0(export_path,"tables_maps\\Xfigures\\","elfgen_dataset","_",runid,"_",huc_level,"_",richness_chg,".csv"), row.names = FALSE)
#------------------------------------------------------------------------------
#------------------------------------------------------------------------------
#----------------
library(tictoc) #time elapsed
library(beepr) #play beep sound when done running
######################################################################################################
# LOAD FILES
######################################################################################################
#site <- "https://deq1.bse.vt.edu/d.dh/"
site <- "http://deq2.bse.vt.edu/d.dh/"
basepath <- "/var/www/R/"
source(paste(basepath,"config.local.private",sep = '/'))
runid <- "runid_11"
huc_level <- "huc8"
richness_chg <- "richness_change_pct"
elfgen_dataset_11 <- read.csv(paste(site,"vahydro_riversegs_elfgen_export?propname=",runid,"&propname_2=elfgen_EDAS_",huc_level,"&propname_3=",richness_chg,sep=""))
#------------------------------------------------------------------------------
# ADD QA COLUMNS
QA_cols <- paste("SELECT *,
Rseg_Outlet_MAF AS nhdplus_MAF,
Qout AS model_Qout,
Qout-Rseg_Outlet_MAF AS DIFF,
abs(((Qout-Rseg_Outlet_MAF)/Rseg_Outlet_MAF)*100) AS 'Diff_%'
FROM elfgen_dataset_11
ORDER BY abs(((Qout-Rseg_Outlet_MAF)/Rseg_Outlet_MAF)*100) DESC
")
elfgen_dataset_11 <- sqldf(QA_cols)
#------------------------------------------------------------------------------
# REMOVE TIDAL SEGMENTS
print(length(elfgen_dataset_11[,1]))
print("REMOVING TIDAL SEGMENTS")
RSeg_tidal <- paste("SELECT *
FROM elfgen_dataset_11
WHERE hydrocode NOT LIKE 'vahydrosw_wshed_JA%_0000' AND
hydrocode NOT LIKE 'vahydrosw_wshed_PL%_0000' AND
hydrocode NOT LIKE 'vahydrosw_wshed_RL%_0000' AND
hydrocode NOT LIKE 'vahydrosw_wshed_YL%_0000' AND
hydrocode NOT LIKE 'vahydrosw_wshed_YM%_0000' AND
hydrocode NOT LIKE 'vahydrosw_wshed_YP%_0000' AND
hydrocode NOT LIKE 'vahydrosw_wshed_EL%_0000' AND
hydrocode NOT LIKE 'vahydrosw_wshed_JB%_0000' AND
hydrocode NOT LIKE 'vahydrosw_wshed_MN%_0000' AND
hydrocode NOT LIKE 'vahydrosw_wshed_ES%_0000'
")
elfgen_dataset_11 <- sqldf(RSeg_tidal)
print(length(elfgen_dataset_11[,1]))
#write.csv(elfgen_dataset_11,paste0(export_path,"tables_maps\\Xfigures\\","elfgen_dataset","_",runid,"_",huc_level,"_",richness_chg,".csv"), row.names = FALSE)
#------------------------------------------------------------------------------
# REMOVE ANY WITH Rseg Outlet MAF > breakpt
print(length(elfgen_dataset_11[,1]))
print("REMOVING SEGMENTS TO THE RIGHT OF BREAKPOINT")
rm_Right_Of_bkpt <- paste('SELECT *
FROM elfgen_dataset_11
WHERE Rseg_Outlet_MAF < breakpt
ORDER BY hydroid ASC
',sep = '')
elfgen_dataset_11 <- sqldf(rm_Right_Of_bkpt)
print(length(elfgen_dataset_11[,1]))
View(elfgen_dataset_11)
View(elfgen_dataset_11)
huc_level
richness_chg
# JOIN 3 TABLES
runid <- "runid_13"
elfgen_dataset_13 <- read.csv(paste(site,"vahydro_riversegs_elfgen_export?propname=",runid,"&propname_2=elfgen_EDAS_",huc_level,"&propname_3=",richness_chg,sep=""))
runid <- "runid_18"
elfgen_dataset_18 <- read.csv(paste(site,"vahydro_riversegs_elfgen_export?propname=",runid,"&propname_2=elfgen_EDAS_",huc_level,"&propname_3=",richness_chg,sep=""))
elfgen_combine <- paste('SELECT a.*,
a.richness_change AS "2020_pct_abs",
b.richness_change AS "2040_pct_abs",
c.richness_change AS "Exempt_pct_abs",
a.p AS "2020_p",
b.p AS "2040_p",
c.p AS "Exempt_p"
FROM elfgen_dataset_11 AS a
LEFT OUTER JOIN elfgen_dataset_13 AS b
ON (a.hydroid = b.hydroid)
LEFT OUTER JOIN elfgen_dataset_18 AS c
ON (a.hydroid = c.hydroid)
ORDER BY a.richness_change ASC
',sep = '')
elfgen_combine <- sqldf(elfgen_combine)
View(elfgen_combine)
elfgen_combine <- paste('SELECT a."Rseg.Model",
a.hydrocode,
a.richness_change AS "2020_chg_pct",
b.richness_change AS "2040_chg_pct",
c.richness_change AS "Exempt_chg_pct"
FROM elfgen_dataset_11 AS a
LEFT OUTER JOIN elfgen_dataset_13 AS b
ON (a.hydroid = b.hydroid)
LEFT OUTER JOIN elfgen_dataset_18 AS c
ON (a.hydroid = c.hydroid)
ORDER BY a.richness_change ASC
',sep = '')
elfgen_combine <- sqldf(elfgen_combine)
richness_chg
write.csv(elfgen_combine,paste0(export_path,"tables_maps\\Xfigures\\","elfgen_dataset_rseg_summary_",richness_chg,".csv"), row.names = FALSE)
library(tictoc) #time elapsed
library(beepr) #play beep sound when done running
######################################################################################################
# LOAD FILES
######################################################################################################
#site <- "https://deq1.bse.vt.edu/d.dh/"
site <- "http://deq2.bse.vt.edu/d.dh/"
basepath <- "/var/www/R/"
source(paste(basepath,"config.local.private",sep = '/'))
runid <- "runid_11"
huc_level <- "huc8"
richness_chg <- "richness_change_abs"
elfgen_dataset_11 <- read.csv(paste(site,"vahydro_riversegs_elfgen_export?propname=",runid,"&propname_2=elfgen_EDAS_",huc_level,"&propname_3=",richness_chg,sep=""))
QA_cols <- paste("SELECT *,
Rseg_Outlet_MAF AS nhdplus_MAF,
Qout AS model_Qout,
Qout-Rseg_Outlet_MAF AS DIFF,
abs(((Qout-Rseg_Outlet_MAF)/Rseg_Outlet_MAF)*100) AS 'Diff_%'
FROM elfgen_dataset_11
ORDER BY abs(((Qout-Rseg_Outlet_MAF)/Rseg_Outlet_MAF)*100) DESC
")
elfgen_dataset_11 <- sqldf(QA_cols)
#------------------------------------------------------------------------------
# REMOVE TIDAL SEGMENTS
print(length(elfgen_dataset_11[,1]))
print("REMOVING TIDAL SEGMENTS")
RSeg_tidal <- paste("SELECT *
FROM elfgen_dataset_11
WHERE hydrocode NOT LIKE 'vahydrosw_wshed_JA%_0000' AND
hydrocode NOT LIKE 'vahydrosw_wshed_PL%_0000' AND
hydrocode NOT LIKE 'vahydrosw_wshed_RL%_0000' AND
hydrocode NOT LIKE 'vahydrosw_wshed_YL%_0000' AND
hydrocode NOT LIKE 'vahydrosw_wshed_YM%_0000' AND
hydrocode NOT LIKE 'vahydrosw_wshed_YP%_0000' AND
hydrocode NOT LIKE 'vahydrosw_wshed_EL%_0000' AND
hydrocode NOT LIKE 'vahydrosw_wshed_JB%_0000' AND
hydrocode NOT LIKE 'vahydrosw_wshed_MN%_0000' AND
hydrocode NOT LIKE 'vahydrosw_wshed_ES%_0000'
")
elfgen_dataset_11 <- sqldf(RSeg_tidal)
print(length(elfgen_dataset_11[,1]))
#write.csv(elfgen_dataset_11,paste0(export_path,"tables_maps\\Xfigures\\","elfgen_dataset","_",runid,"_",huc_level,"_",richness_chg,".csv"), row.names = FALSE)
#------------------------------------------------------------------------------
# REMOVE ANY WITH Rseg Outlet MAF > breakpt
print(length(elfgen_dataset_11[,1]))
print("REMOVING SEGMENTS TO THE RIGHT OF BREAKPOINT")
rm_Right_Of_bkpt <- paste('SELECT *
FROM elfgen_dataset_11
WHERE Rseg_Outlet_MAF < breakpt
ORDER BY hydroid ASC
',sep = '')
elfgen_dataset_11 <- sqldf(rm_Right_Of_bkpt)
print(length(elfgen_dataset_11[,1]))
# JOIN 3 TABLES
runid <- "runid_13"
elfgen_dataset_13 <- read.csv(paste(site,"vahydro_riversegs_elfgen_export?propname=",runid,"&propname_2=elfgen_EDAS_",huc_level,"&propname_3=",richness_chg,sep=""))
runid <- "runid_18"
elfgen_dataset_18 <- read.csv(paste(site,"vahydro_riversegs_elfgen_export?propname=",runid,"&propname_2=elfgen_EDAS_",huc_level,"&propname_3=",richness_chg,sep=""))
# elfgen_combine <- paste('SELECT a.*,
#                                 a.richness_change AS "2020_pct_abs",
#                                 b.richness_change AS "2040_pct_abs",
#                                 c.richness_change AS "Exempt_pct_abs",
#                                 a.p AS "2020_p",
#                                 b.p AS "2040_p",
#                                 c.p AS "Exempt_p"
#                   FROM elfgen_dataset_11 AS a
#                     LEFT OUTER JOIN elfgen_dataset_13 AS b
#                     ON (a.hydroid = b.hydroid)
#                     LEFT OUTER JOIN elfgen_dataset_18 AS c
#                     ON (a.hydroid = c.hydroid)
#                   ORDER BY a.richness_change ASC
#                   ',sep = '')
elfgen_combine <- paste('SELECT a."Rseg.Model",
a.hydrocode,
a.richness_change AS "2020_chg_#",
b.richness_change AS "2040_chg_#",
c.richness_change AS "Exempt_chg_#"
FROM elfgen_dataset_11 AS a
LEFT OUTER JOIN elfgen_dataset_13 AS b
ON (a.hydroid = b.hydroid)
LEFT OUTER JOIN elfgen_dataset_18 AS c
ON (a.hydroid = c.hydroid)
ORDER BY a.richness_change ASC
',sep = '')
elfgen_combine <- sqldf(elfgen_combine)
View(elfgen_combine)
View(elfgen_dataset_11)
#                   ORDER BY a.richness_change ASC
#                   ',sep = '')
elfgen_combine <- paste('SELECT a."Rseg.Model",
a.hydrocode,
a.richness_change AS "2020_chg_#",
b.richness_change AS "2040_chg_#",
c.richness_change AS "Exempt_chg_#",
a.consumptive_use_frac*100 AS "2020_consumptive_use_%"
FROM elfgen_dataset_11 AS a
LEFT OUTER JOIN elfgen_dataset_13 AS b
ON (a.hydroid = b.hydroid)
LEFT OUTER JOIN elfgen_dataset_18 AS c
ON (a.hydroid = c.hydroid)
ORDER BY a.richness_change ASC
',sep = '')
elfgen_combine <- sqldf(elfgen_combine)
View(elfgen_combine)
elfgen_combine <- paste('SELECT a."Rseg.Model",
a.hydrocode,
a.richness_change AS "2020_chg_#",
b.richness_change AS "2040_chg_#",
c.richness_change AS "Exempt_chg_#",
a.consumptive_use_frac*100 AS "2020_consumptive_use_%",
b.consumptive_use_frac*100 AS "2040_consumptive_use_%",
c.consumptive_use_frac*100 AS "20Exempt_consumptive_use_%"
FROM elfgen_dataset_11 AS a
LEFT OUTER JOIN elfgen_dataset_13 AS b
ON (a.hydroid = b.hydroid)
LEFT OUTER JOIN elfgen_dataset_18 AS c
ON (a.hydroid = c.hydroid)
ORDER BY a.richness_change ASC
',sep = '')
elfgen_combine <- sqldf(elfgen_combine)
View(elfgen_combine)
elfgen_combine <- paste('SELECT a."Rseg.Model",
a.hydrocode,
a.richness_change AS "2020_chg_#",
b.richness_change AS "2040_chg_#",
c.richness_change AS "Exempt_chg_#",
a.consumptive_use_frac*100 AS "2020_consumptive_use_%",
b.consumptive_use_frac*100 AS "2040_consumptive_use_%",
c.consumptive_use_frac*100 AS "Exempt_consumptive_use_%"
FROM elfgen_dataset_11 AS a
LEFT OUTER JOIN elfgen_dataset_13 AS b
ON (a.hydroid = b.hydroid)
LEFT OUTER JOIN elfgen_dataset_18 AS c
ON (a.hydroid = c.hydroid)
ORDER BY a.richness_change ASC
',sep = '')
elfgen_combine <- sqldf(elfgen_combine)
write.csv(elfgen_combine,paste0(export_path,"tables_maps\\Xfigures\\","elfgen_dataset_rseg_summary_",richness_chg,".csv"), row.names = FALSE)
export_path
paste(export_path,"tables_maps\\Xfigures\\","elfgen_dataset_rseg_summary_richness_change_pct",sep="")
library(tictoc) #time elapsed
library(beepr) #play beep sound when done running
######################################################################################################
# LOAD FILES
######################################################################################################
#site <- "https://deq1.bse.vt.edu/d.dh/"
site <- "http://deq2.bse.vt.edu/d.dh/"
basepath <- "/var/www/R/"
source(paste(basepath,"config.local.private",sep = '/'))
elfgen_num <- read.csv(paste(export_path,"tables_maps\\Xfigures\\","elfgen_dataset_rseg_summary_richness_change_abs",sep=""))
elfgen_pct <- read.csv(paste(export_path,"tables_maps\\Xfigures\\","elfgen_dataset_rseg_summary_richness_change_pct",sep=""))
elfgen_num <- read.csv(paste(export_path,"tables_maps/Xfigures/","elfgen_dataset_rseg_summary_richness_change_abs",sep=""))
elfgen_pct <- read.csv(paste(export_path,"tables_maps/Xfigures/","elfgen_dataset_rseg_summary_richness_change_pct",sep=""))
elfgen_num <- read.csv(paste(export_path,"tables_maps/Xfigures/","elfgen_dataset_rseg_summary_richness_change_abs.csv",sep=""))
elfgen_pct <- read.csv(paste(export_path,"tables_maps/Xfigures/","elfgen_dataset_rseg_summary_richness_change_pct.csv",sep=""))
join_em <- paste('SELECT *
FROM elfgen_num AS a
LEFT OUTER JOIN elfgen_pct AS b
ON (a.hydrocode = b.hydrocode)
ORDER BY a.Exempt_chg_# DESC
',sep = '')
join_em <- sqldf(join_em)
join_em <- paste('SELECT *
FROM elfgen_num AS a
LEFT OUTER JOIN elfgen_pct AS b
ON (a.hydrocode = b.hydrocode)
ORDER BY a."Exempt_chg_#" DESC
',sep = '')
join_em <- sqldf(join_em)
join_em <- paste('SELECT *
FROM elfgen_num AS a
LEFT OUTER JOIN elfgen_pct AS b
ON (a.hydrocode = b.hydrocode)
',sep = '')
join_em <- sqldf(join_em)
View(join_em)
write.csv(join_em,paste0(export_path,"tables_maps\\Xfigures\\","join_em.csv"), row.names = FALSE)
runid <- "runid_18"
huc_level <- "huc8"
richness_chg <- "richness_change_abs"
elfgen_dataset <- read.csv(paste(site,"vahydro_riversegs_elfgen_export?propname=",runid,"&propname_2=elfgen_EDAS_",huc_level,"&propname_3=",richness_chg,sep=""))
statewide.mapgen.ELFGEN(metric = "consumptive_use_frac",
runid_a = runid,
huc_level = huc_level,
richness_chg = richness_chg,
elfgen_dataset = elfgen_dataset
)
library(tictoc) #time elapsed
library(beepr) #play beep sound when done running
######################################################################################################
# LOAD FILES
######################################################################################################
#site <- "https://deq1.bse.vt.edu/d.dh/"
site <- "http://deq2.bse.vt.edu/d.dh/"
basepath <- "/var/www/R/"
source(paste(basepath,"config.local.private",sep = '/'))
#DOWNLOAD STATES AND MINOR BASIN LAYERS DIRECT FROM GITHUB
STATES <- read.table(file = 'https://raw.githubusercontent.com/HARPgroup/cbp6/master/code/GIS_LAYERS/STATES.tsv', sep = '\t', header = TRUE)
MinorBasins.csv <- read.table(file = 'https://raw.githubusercontent.com/HARPgroup/hydro-tools/master/GIS_LAYERS/MinorBasins.csv', sep = ',', header = TRUE)
#DOWNLOAD RSEG LAYER DIRECT FROM VAHYDRO
localpath <- tempdir()
filename <- paste("vahydro_riversegs_export.csv",sep="")
destfile <- paste(localpath,filename,sep="\\")
download.file(paste(site,"vahydro_riversegs_export",sep=""), destfile = destfile, method = "libcurl")
RSeg.csv <- read.csv(file=paste(localpath , filename,sep="\\"), header=TRUE, sep=",")
MajorRivers.csv <- read.table(file = 'https://raw.githubusercontent.com/HARPgroup/hydro-tools/master/GIS_LAYERS/MajorRivers.csv', sep = ',', header = TRUE)
#MajorRivers.csv <- read.table(file = 'https://raw.githubusercontent.com/HARPgroup/hydro-tools/rivnames/GIS_LAYERS/MajorRivers.csv', sep = ',', header = TRUE)
#DOWNLOAD FIPS LAYER DIRECT FROM VAHYDRO
fips_filename <- paste("vahydro_usafips_export.csv",sep="")
fips_destfile <- paste(localpath,fips_filename,sep="\\")
download.file(paste(site,"usafips_centroid_export",sep=""), destfile = fips_destfile, method = "libcurl")
fips.csv <- read.csv(file=paste(localpath , fips_filename,sep="\\"), header=TRUE, sep=",")
#LOAD RAW mp.all FILE
# mp.all <- read.csv(paste(folder,"wsp2020.mp.all.MinorBasins_RSegs.csv",sep=""))
#DOWNLOAD RESERVOIR LAYER FROM LOCAL REPO
WBDF <- read.table(file=paste(hydro_tools,"GIS_LAYERS","WBDF.csv",sep="/"), header=TRUE, sep=",")
#LOAD MAPPING FUNCTIONS
# source(paste(vahydro_location,"R/wsp/wsp2020/FoundationDataset/geo_summaries/minorbasin.mapgen.R",sep = '/'))
# source(paste(vahydro_location,"R/wsp/wsp2020/FoundationDataset/geo_summaries/minorbasin.mapgen.SINGLE.SCENARIO.R",sep = '/'))
# source(paste(vahydro_location,"R/wsp/wsp2020/FoundationDataset/geo_summaries/mb.extent.R",sep = '/'))
source(paste(vahydro_location,"R/wsp/wsp2020/FoundationDataset/geo_summaries/statewide.mapgen.R",sep = '/'))
source(paste(vahydro_location,"R/wsp/wsp2020/FoundationDataset/geo_summaries/statewide.mapgen.SINGLE.SCENARIO.R",sep = '/'))
source(paste(vahydro_location,"R/wsp/wsp2020/FoundationDataset/geo_summaries/statewide.mapgen.OVERVIEW.R",sep = '/'))
source(paste(vahydro_location,"R/wsp/wsp2020/FoundationDataset/geo_summaries/statewide.mapgen.ELFGEN.R",sep = '/'))
runid <- "runid_18"
huc_level <- "huc8"
richness_chg <- "richness_change_abs"
elfgen_dataset <- read.csv(paste(site,"vahydro_riversegs_elfgen_export?propname=",runid,"&propname_2=elfgen_EDAS_",huc_level,"&propname_3=",richness_chg,sep=""))
statewide.mapgen.ELFGEN(metric = "consumptive_use_frac",
runid_a = runid,
huc_level = huc_level,
richness_chg = richness_chg,
elfgen_dataset = elfgen_dataset
)
runid <- "runid_18"
huc_level <- "huc8"
richness_chg <- "richness_change_pct"
elfgen_dataset <- read.csv(paste(site,"vahydro_riversegs_elfgen_export?propname=",runid,"&propname_2=elfgen_EDAS_",huc_level,"&propname_3=",richness_chg,sep=""))
statewide.mapgen.ELFGEN(metric = "consumptive_use_frac",
runid_a = runid,
huc_level = huc_level,
richness_chg = richness_chg,
elfgen_dataset = elfgen_dataset
)
library(tictoc) #time elapsed
library(beepr) #play beep sound when done running
######################################################################################################
# LOAD FILES
######################################################################################################
#site <- "https://deq1.bse.vt.edu/d.dh/"
site <- "http://deq2.bse.vt.edu/d.dh/"
basepath <- "/var/www/R/"
source(paste(basepath,"config.local.private",sep = '/'))
#DOWNLOAD STATES AND MINOR BASIN LAYERS DIRECT FROM GITHUB
STATES <- read.table(file = 'https://raw.githubusercontent.com/HARPgroup/cbp6/master/code/GIS_LAYERS/STATES.tsv', sep = '\t', header = TRUE)
MinorBasins.csv <- read.table(file = 'https://raw.githubusercontent.com/HARPgroup/hydro-tools/master/GIS_LAYERS/MinorBasins.csv', sep = ',', header = TRUE)
#DOWNLOAD RSEG LAYER DIRECT FROM VAHYDRO
localpath <- tempdir()
filename <- paste("vahydro_riversegs_export.csv",sep="")
destfile <- paste(localpath,filename,sep="\\")
download.file(paste(site,"vahydro_riversegs_export",sep=""), destfile = destfile, method = "libcurl")
RSeg.csv <- read.csv(file=paste(localpath , filename,sep="\\"), header=TRUE, sep=",")
MajorRivers.csv <- read.table(file = 'https://raw.githubusercontent.com/HARPgroup/hydro-tools/master/GIS_LAYERS/MajorRivers.csv', sep = ',', header = TRUE)
#MajorRivers.csv <- read.table(file = 'https://raw.githubusercontent.com/HARPgroup/hydro-tools/rivnames/GIS_LAYERS/MajorRivers.csv', sep = ',', header = TRUE)
#DOWNLOAD FIPS LAYER DIRECT FROM VAHYDRO
fips_filename <- paste("vahydro_usafips_export.csv",sep="")
fips_destfile <- paste(localpath,fips_filename,sep="\\")
download.file(paste(site,"usafips_centroid_export",sep=""), destfile = fips_destfile, method = "libcurl")
fips.csv <- read.csv(file=paste(localpath , fips_filename,sep="\\"), header=TRUE, sep=",")
#LOAD RAW mp.all FILE
# mp.all <- read.csv(paste(folder,"wsp2020.mp.all.MinorBasins_RSegs.csv",sep=""))
#DOWNLOAD RESERVOIR LAYER FROM LOCAL REPO
WBDF <- read.table(file=paste(hydro_tools,"GIS_LAYERS","WBDF.csv",sep="/"), header=TRUE, sep=",")
#LOAD MAPPING FUNCTIONS
# source(paste(vahydro_location,"R/wsp/wsp2020/FoundationDataset/geo_summaries/minorbasin.mapgen.R",sep = '/'))
# source(paste(vahydro_location,"R/wsp/wsp2020/FoundationDataset/geo_summaries/minorbasin.mapgen.SINGLE.SCENARIO.R",sep = '/'))
# source(paste(vahydro_location,"R/wsp/wsp2020/FoundationDataset/geo_summaries/mb.extent.R",sep = '/'))
source(paste(vahydro_location,"R/wsp/wsp2020/FoundationDataset/geo_summaries/statewide.mapgen.R",sep = '/'))
source(paste(vahydro_location,"R/wsp/wsp2020/FoundationDataset/geo_summaries/statewide.mapgen.SINGLE.SCENARIO.R",sep = '/'))
source(paste(vahydro_location,"R/wsp/wsp2020/FoundationDataset/geo_summaries/statewide.mapgen.OVERVIEW.R",sep = '/'))
source(paste(vahydro_location,"R/wsp/wsp2020/FoundationDataset/geo_summaries/statewide.mapgen.ELFGEN.R",sep = '/'))
runid <- "runid_11"
huc_level <- "huc8"
richness_chg <- "richness_change_pct"
elfgen_dataset <- read.csv(paste(site,"vahydro_riversegs_elfgen_export?propname=",runid,"&propname_2=elfgen_EDAS_",huc_level,"&propname_3=",richness_chg,sep=""))
statewide.mapgen.ELFGEN(metric = "consumptive_use_frac",
runid_a = runid,
huc_level = huc_level,
richness_chg = richness_chg,
elfgen_dataset = elfgen_dataset
)
runid <- "runid_13"
huc_level <- "huc8"
richness_chg <- "richness_change_pct"
elfgen_dataset <- read.csv(paste(site,"vahydro_riversegs_elfgen_export?propname=",runid,"&propname_2=elfgen_EDAS_",huc_level,"&propname_3=",richness_chg,sep=""))
statewide.mapgen.ELFGEN(metric = "consumptive_use_frac",
runid_a = runid,
huc_level = huc_level,
richness_chg = richness_chg,
elfgen_dataset = elfgen_dataset
)
runid <- "runid_18"
huc_level <- "huc8"
richness_chg <- "richness_change_pct"
elfgen_dataset <- read.csv(paste(site,"vahydro_riversegs_elfgen_export?propname=",runid,"&propname_2=elfgen_EDAS_",huc_level,"&propname_3=",richness_chg,sep=""))
statewide.mapgen.ELFGEN(metric = "consumptive_use_frac",
runid_a = runid,
huc_level = huc_level,
richness_chg = richness_chg,
elfgen_dataset = elfgen_dataset
)
runid <- "runid_11"
huc_level <- "huc8"
richness_chg <- "richness_change_abs"
elfgen_dataset <- read.csv(paste(site,"vahydro_riversegs_elfgen_export?propname=",runid,"&propname_2=elfgen_EDAS_",huc_level,"&propname_3=",richness_chg,sep=""))
statewide.mapgen.ELFGEN(metric = "consumptive_use_frac",
runid_a = runid,
huc_level = huc_level,
richness_chg = richness_chg,
elfgen_dataset = elfgen_dataset
)
runid <- "runid_13"
huc_level <- "huc8"
richness_chg <- "richness_change_abs"
elfgen_dataset <- read.csv(paste(site,"vahydro_riversegs_elfgen_export?propname=",runid,"&propname_2=elfgen_EDAS_",huc_level,"&propname_3=",richness_chg,sep=""))
statewide.mapgen.ELFGEN(metric = "consumptive_use_frac",
runid_a = runid,
huc_level = huc_level,
richness_chg = richness_chg,
elfgen_dataset = elfgen_dataset
)
runid <- "runid_18"
huc_level <- "huc8"
richness_chg <- "richness_change_abs"
elfgen_dataset <- read.csv(paste(site,"vahydro_riversegs_elfgen_export?propname=",runid,"&propname_2=elfgen_EDAS_",huc_level,"&propname_3=",richness_chg,sep=""))
statewide.mapgen.ELFGEN(metric = "consumptive_use_frac",
runid_a = runid,
huc_level = huc_level,
richness_chg = richness_chg,
elfgen_dataset = elfgen_dataset
)

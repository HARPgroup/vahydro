xlab="x-axis label", ylab="y-axis label")
dat <- window(dat, start = as.Date("1984-10-01"), end = as.Date("2014-09-30"));
boxplot(as.numeric(dat$Qout) ~ dat$year, ylim=c(0,1000),
main="main title", sub="sub-title",
xlab="x-axis label", ylab="y-axis label"
)
dat <- window(dat, start = as.Date("1984-10-01"), end = as.Date("2014-09-30"));
boxplot(as.numeric(dat$Qout) ~ dat$year, ylim=c(0,1000),
main=paste("elid: ",elid," runid: ",runid,sep=""),
xlab="Date", ylab="Qout"
)
dat <- window(dat, start = as.Date("1984-10-01"), end = as.Date("2014-09-30"));
boxplot(as.numeric(dat$Qout) ~ dat$year, ylim=c(0,1000),
main=paste("elid: ",elid,"/nrunid: ",runid,sep=""),
xlab="Date", ylab="Qout"
)
dat <- window(dat, start = as.Date("1984-10-01"), end = as.Date("2014-09-30"));
boxplot(as.numeric(dat$Qout) ~ dat$year, ylim=c(0,1000),
main=paste("elid: ",elid,"\nrunid: ",runid,sep=""),
xlab="Date", ylab="Qout"
)
dat
dat <- window(dat, start = as.Date("1984-10-01"), end = as.Date("2014-09-30"));
boxplot(as.numeric(dat$Qout) ~ dat$year, ylim=c(0,1000),
main=paste("elid: ",elid,"\nrunid: ",runid,sep=""),
xlab="Date", ylab="Qout (cfs)"
)
paste("elid: ",elid,"\nrunid: ",runid,sep="")
elid,"_",runid,sep="")
paste(elid,"_",runid,sep="")
paste("rseg_model_Qout_",elid,"_",runid,".png",sep="")
paste("rseg_Qout_",elid,"_",runid,".png",sep="")
paste(save_directory,"rseg_Qout_",elid,"_",runid,".png",sep="")
paste(save_directory,"/rseg_Qout_",elid,"_",runid,".png",sep="")
png(paste(save_directory,"/rseg_Qout_",elid,"_",runid,".png",sep=""))
boxplot(as.numeric(dat$Qout) ~ dat$year, ylim=c(0,1000),
main=paste("elid: ",elid,"\nrunid: ",runid,sep=""),
xlab="Date", ylab="Qout (cfs)"
)
dev.off()
max(as.numeric(dat$Qout))
Qout_max <- max(as.numeric(dat$Qout))
Qout_max <- max(as.numeric(dat$Qout))
# PLOT DATA
png(paste(save_directory,"/rseg_Qout_",elid,"_",runid,".png",sep=""))
boxplot(as.numeric(dat$Qout) ~ dat$year, ylim=c(0,Qout_max),
main=paste("elid: ",elid,"\nrunid: ",runid,sep=""),
xlab="Date", ylab="Qout (cfs)"
)
dev.off()
png(paste(save_directory,"/rseg_Qout_",elid,"_",runid,".png",sep=""))
boxplot(as.numeric(dat$Qout) ~ dat$year, ylim=c(0,Qout_max),
main=paste("elid: ",elid,"\nrunid: ",runid,sep=""),
xlab="Date", ylab="Qout (cfs)"
)
dev.off()
boxplot(as.numeric(dat$Runit) ~ dat$year, ylim=c(0,3))
Runit_max <- max(as.numeric(dat$Runit))
Runit_max
boxplot(as.numeric(dat$Runit) ~ dat$year, ylim=c(0,Runit_max))
png(paste(save_directory,"/rseg_Qout_",elid,"_",runid,".png",sep=""))
boxplot(as.numeric(dat$Qout) ~ dat$year, ylim=c(0,3),
main=paste("elid: ",elid,"\nrunid: ",runid,sep=""),
xlab="Date", ylab="Qout (cfs)"
)
dev.off()
# PLOT DATA
png(paste(save_directory,"/rseg_Qout_",elid,"_",runid,".png",sep=""))
boxplot(as.numeric(dat$Qout) ~ dat$year, ylim=c(0,30),
main=paste("elid: ",elid,"\nrunid: ",runid,sep=""),
xlab="Date", ylab="Qout (cfs)"
)
dev.off()
png(paste(save_directory,"/rseg_Qout_",elid,"_",runid,".png",sep=""))
boxplot(as.numeric(dat$Qout) ~ dat$year, ylim=c(0,20),
main=paste("elid: ",elid,"\nrunid: ",runid,sep=""),
xlab="Date", ylab="Qout (cfs)"
)
dev.off()
boxplot(as.numeric(dat$Runit) ~ dat$year, ylim=c(0,5))
# PLOT Runit DATA
png(paste(save_directory,"/rseg_Runit_",elid,"_",runid,".png",sep=""))
boxplot(as.numeric(dat$Runit) ~ dat$year, ylim=c(0,5),
main=paste("elid: ",elid,"\nrunid: ",runid,sep=""),
xlab="Date", ylab="Runit (cfs)"
)
dev.off()
# PLOT Qout DATA
png(paste(save_directory,"/rseg_Qout_",elid,"_",runid,".png",sep=""))
boxplot(as.numeric(dat$Qout) ~ dat$year, ylim=c(0,20),
main=paste("elid: ",elid,"\nrunid: ",runid,sep=""),
xlab="Date", ylab="Qout (cfs)"
)
dev.off()
# PLOT Runit DATA
png(paste(save_directory,"/rseg_Runit_",elid,"_",runid,".png",sep=""))
boxplot(as.numeric(dat$Runit) ~ dat$year, ylim=c(0,5),
main=paste("elid: ",elid,"\nrunid: ",runid,sep=""),
xlab="Date", ylab="Runit (cfs)"
)
dev.off()
library(pander);
library(httr);
library(hydroTSM);
# save_directory <- "/var/www/html/files/fe/plots"
save_directory <- "/Users/jklei/Desktop/GitHub/plots"
site <- "http://deq2.bse.vt.edu/d.dh"    #Specify the site of interest, either d.bet OR d.dh
# Load Libraries
basepath='/var/www/R';
source('/var/www/R/config.R');
options(timeout=1200); # set timeout to twice default level to avoid abort due to high traffic
# elid = 258595
# runid = 12
elid = 352078 #South Fork Powell River - Big Cherry Reservoir
runid = 601
# GET DATA
omsite = site <- "http://deq2.bse.vt.edu"
dat <- fn_get_runfile(elid, runid, site= omsite,  cached = FALSE);
dat <- window(dat, start = as.Date("1984-10-01"), end = as.Date("2014-09-30"));
# Qout_max <- max(as.numeric(dat$Qout))
# Runit_max <- max(as.numeric(dat$Runit))
# PLOT Qout DATA
png(paste(save_directory,"/rseg_Qout_",elid,"_",runid,".png",sep=""))
boxplot(as.numeric(dat$Qout) ~ dat$year, ylim=c(0,20),
main=paste("elid: ",elid,"\nrunid: ",runid,sep=""),
xlab="Date", ylab="Qout (cfs)"
)
dev.off()
# PLOT Runit DATA
png(paste(save_directory,"/rseg_Runit_",elid,"_",runid,".png",sep=""))
boxplot(as.numeric(dat$Runit) ~ dat$year, ylim=c(0,5),
main=paste("elid: ",elid,"\nrunid: ",runid,sep=""),
xlab="Date", ylab="Runit (cfs)"
)
dev.off()
library(pander);
library(httr);
library(hydroTSM);
# save_directory <- "/var/www/html/files/fe/plots"
save_directory <- "/Users/jklei/Desktop/GitHub/plots"
site <- "http://deq2.bse.vt.edu/d.dh"    #Specify the site of interest, either d.bet OR d.dh
# Load Libraries
basepath='/var/www/R';
source('/var/www/R/config.R');
options(timeout=1200); # set timeout to twice default level to avoid abort due to high traffic
elid = 352078 #South Fork Powell River - Big Cherry Reservoir
runid = 601
# GET DATA
omsite = site <- "http://deq2.bse.vt.edu"
dat <- fn_get_runfile(elid, runid, site= omsite,  cached = FALSE);
dat <- window(dat, start = as.Date("1984-10-01"), end = as.Date("2014-09-30"));
dat.df <- data.frame(dat)
View(dat.df)
library(pander);
library(httr);
library(hydroTSM);
# save_directory <- "/var/www/html/files/fe/plots"
save_directory <- "/Users/jklei/Desktop/GitHub/plots"
site <- "http://deq2.bse.vt.edu/d.dh"    #Specify the site of interest, either d.bet OR d.dh
# Load Libraries
basepath='/var/www/R';
source('/var/www/R/config.R');
options(timeout=1200); # set timeout to twice default level to avoid abort due to high traffic
# elid = 258595
# runid = 12
elid = 352078 #South Fork Powell River - Big Cherry Reservoir
runid = 601
# GET DATA
omsite = site <- "http://deq2.bse.vt.edu"
dat <- fn_get_runfile(elid, runid, site= omsite,  cached = FALSE);
dat <- window(dat, start = as.Date("1984-10-01"), end = as.Date("2014-09-30"));
dat.df <- data.frame(dat)
# Qout_max <- max(as.numeric(dat$Qout))
# Runit_max <- max(as.numeric(dat$Runit))
# PLOT Qout DATA
png(paste(save_directory,"/rseg_Qout_",elid,"_",runid,".png",sep=""))
boxplot(as.numeric(dat$Qout) ~ dat$year, ylim=c(0,20),
main=paste("elid: ",elid,"\nrunid: ",runid,sep=""),
xlab="Date", ylab="Qout (cfs)"
)
dev.off()
# PLOT Runit DATA
png(paste(save_directory,"/rseg_Runit_",elid,"_",runid,".png",sep=""))
boxplot(as.numeric(dat$Runit) ~ dat$year, ylim=c(0,5),
main=paste("elid: ",elid,"\nrunid: ",runid,sep=""),
xlab="Date", ylab="Runit (cfs)"
)
dev.off()
View(dat.df)
library(pander);
library(httr);
library(hydroTSM);
# save_directory <- "/var/www/html/files/fe/plots"
save_directory <- "/Users/jklei/Desktop/GitHub/plots"
site <- "http://deq2.bse.vt.edu/d.dh"    #Specify the site of interest, either d.bet OR d.dh
# Load Libraries
basepath='/var/www/R';
source('/var/www/R/config.R');
options(timeout=1200); # set timeout to twice default level to avoid abort due to high traffic
# elid = 258595
# runid = 12
elid = 352078 #South Fork Powell River - Big Cherry Reservoir
runid = 601
# GET DATA
omsite = site <- "http://deq2.bse.vt.edu"
dat <- fn_get_runfile(elid, runid, site= omsite,  cached = FALSE);
dat <- window(dat, start = as.Date("1984-10-01"), end = as.Date("2014-09-30"));
dat.df <- data.frame(dat)
# Qout_max <- max(as.numeric(dat$Qout))
# Runit_max <- max(as.numeric(dat$Runit))
# PLOT Qout DATA
png(paste(save_directory,"/rseg_Qout_",elid,"_",runid,".png",sep=""))
boxplot(as.numeric(dat$Qout) ~ dat$year, ylim=c(0,20),
main=paste("elid: ",elid,"\nrunid: ",runid,sep=""),
xlab="Date", ylab="Qout (cfs)"
)
dev.off()
# PLOT Runit DATA
png(paste(save_directory,"/rseg_Runit_",elid,"_",runid,".png",sep=""))
boxplot(as.numeric(dat$Runit) ~ dat$year, ylim=c(0,5),
main=paste("elid: ",elid,"\nrunid: ",runid,sep=""),
xlab="Date", ylab="Runit (cfs)"
)
dev.off()
library(hydrotools)
dat <- om_get_rundata(352078,601)
library(hydrotools)
dat <- om_get_rundata(352078,601) #automatically cuts out model warm-up periods
install_github("HARPgroup/hydro-tools")
library(devtools)
install_github("HARPgroup/hydro-tools")
install_github("HARPgroup/hydro-tools")
library(devtools)
install_github("HARPgroup/hydro-tools")
Version()
#' The base class for executable equation based meta-model components.
#'
#' @param elid integer OM model element id
#' @param runid integer run id
#' @param site URL of om server
#' @param cached boolean - if TRUE will use recently stored local copy
#' @param hydrowarmup boolean - if TRUE will trim beginning of model time frame
#' @return reference class of type openmi.om.equation
#' @seealso NA
#' @export om_get_rundata
#' @examples NA
om_get_rundata <- function(elid, runid, site='http://deq2.bse.vt.edu', cached=FALSE, hydrowarmup=TRUE) {
# replace this with a single function that grabs
# a hydro model for summarization and slims it down
dat <- fn_get_runfile(elid, runid, site,  cached = FALSE)
syear = as.integer(min(dat$year))
eyear = as.integer(max(dat$year))
if ((hydrowarmup == TRUE) & (syear < (eyear - 2))) {
sdate <- paste0(syear,"-10-01")
edate <- paste0(eyear,"-09-30")
} else {
# take a couple months in the begining to make some modest warmup.
sdate <- paste0(syear,"-02-01")
edate <- paste0(eyear,"-12-31")
}
dat <- window(dat, start = sdate, end = edate);
mode(dat) <- 'numeric'
return(dat)
}
# Automating August Low Flows
library('zoo')
#library('IHA')
options(timeout=480); # set timeout to twice default level to avoid abort due to high traffic
#' Retrieve Run summary data from Old OM model
#'
#' @param elid integer OM model element id
#' @param runid integer run id
#' @param varname character - if set will isolate a single column of data
#' @param scenid integer - model domain ID
#' @param site URL of om server
#' @return reference class of type openmi.om.equation
#' @seealso NA
#' @export fn_get_rundata
#' @examples NA
fn_get_rundata <- function(
elementid = -1, runid = -1,
varname = 'Qout', scenid = 37,
site = "http://deq2.bse.vt.edu"
) {
if (elementid == -1 ) {
return(FALSE);
}
if (runid == -1 ) {
return(FALSE);
}
# may be obsolete
#setInternet2(TRUE)
# Set up query for batch of model objects
# Internal variable to construct the query
urlbase<- paste(site, "om/remote/get_modelData.php?elementid=", sep='/');
print(paste("Getting data for run ", runid, " for element ", elementid))      # creates the whole url by pasting the element and run ids into it
filename<-paste(urlbase, elementid, "&variables=", varname, "&runid=", runid, "&startdate=1984-10-01&enddate=2005-09-30", sep = "")
print(paste("From ", filename));
dat = try(read.table(filename, header = TRUE, sep = ","))
if (class(dat)=='try-error') {
# what to do if file empty
print(paste("Error: empty file ", filename))
return (FALSE);
} else {
#dat<-read.table(filename, header = TRUE, sep = ",")   #  reads the csv-formatted data from the url
print(paste("Data obtained, found ", length(dat[,1]), " lines - formatting for IHA analysis"))
datv<-as.vector(dat)  # stores the data as a vector
datv$thisdate <- as.POSIXct(datv$thisdate)
f3 <- zoo(datv[,paste(varname, runid, sep="_")], order.by = datv$thisdate)
}
return(f3);
}
#' Retrieve Info About Run File from Old OM model
#'
#' @param elid integer OM model element id
#' @param runid integer run id
#' @param scenid integer - model domain ID
#' @param site URL of om server
#' @return reference class of type openmi.om.equation
#' @seealso NA
#' @export fn_get_runfile_info
#' @examples NA
fn_get_runfile_info <- function(
elementid = -1, runid = -1, scenid = 37,
site = "http://deq2.bse.vt.edu"
) {
if (elementid == -1 ) {
return(FALSE);
}
if (runid == -1 ) {
return(FALSE);
}
# may be obsolete
#setInternet2(TRUE)
# just get the run file
urlbase<- paste(site, "om/remote/get_modelData.php?operation=11&delimiter=tab&elementid=", sep='/');
print(paste("Getting Info for run ", runid, " for element ", elementid))      # creates the whole url by pasting the element and run ids into it
filename<-paste(urlbase, elementid, "&runid=", runid, "&startdate=1984-10-01&enddate=2005-09-30", sep = "")
print(paste("From ", filename))
finfo = try(read.csv(filename, header = TRUE, sep = "\t")) ;
if (class(finfo)=='try-error') {
# what to do if file empty
print(paste("Error: retrieving ", filename))
return (FALSE);
}
print("Returning file Info")
return(finfo);
}
#' Retrieve Entire Run Log File from Old OM model
#'
#' @param elementid integer OM model element id
#' @param runid integer run id
#' @param scenid integer - model domain ID
#' @param site URL of om server
#' @param cached boolean - use local copy or force refresh
#' @param outaszoo boolean return as a zoo timeseries if TRUE, or as data frame
#' @param usetz character pass in a custom timezone for zoo
#' @return reference class of type openmi.om.equation
#' @seealso NA
#' @export fn_get_runfile_info
#' @examples NA
fn_get_runfile <- function(
elementid = -1, runid = -1, scenid = 37,
site = "http://deq2.bse.vt.edu", cached = TRUE,
outaszoo=TRUE, use_tz=FALSE
) {
if (elementid == -1 ) {
return(FALSE);
}
if (runid == -1 ) {
return(FALSE);
}
# may be obsolete
#setInternet2(TRUE)
# just get the run file
finfo = fn_get_runfile_info(elementid, runid, scenid, site)
if (!is.list(finfo)) {
return(FALSE);
}
if (finfo$compressed == 1) {
# If the host is not the same as site, and finfo$compressed == 1, then we need to
# Repeat this request on the other host
host_site <- paste0('http://',finfo$host)
if (host_site != site) {
print("Compressed file requested, repeating req1uest on model run host site")
finfo <- fn_get_runfile_info(elementid, runid, scenid, host_site)
}
}
filename = as.character(finfo$remote_url);
localname = basename(as.character(finfo$output_file));
if (cached & file.exists(localname)) {
linfo = file.info(localname)
if (as.Date(finfo$run_date) > as.Date(linfo$mtime)) {
# re-download if the remote is newer than the local
if (finfo$compressed == 1) {
print(paste("Downloading Compressed Run File ", filename));
download.file(filename,'tempfile',mode="wb", method = "libcurl");
filename <-  unzip ('tempfile');
} else {
print(paste("Downloading Un-compressed Run File ", filename));
}
} else {
# not new, so just use the local copy
print(paste("Remote file date ", as.Date(finfo$run_date), " <= run date ", as.Date(linfo$mtime), "Using cached copy "));
filename = localname
}
} else {
# does not exist locally
print(paste("Downloading Run File ", filename));
download.file(filename,'tempfile',mode="wb", method = "libcurl");
if (finfo$compressed == 1) {
print(paste("Unpacking Compressed Run File ", filename));
filename <-  unzip ('tempfile');
}
}
dat = try(read.table( filename, header = TRUE, sep = ",")) ;
if (class(dat)=='try-error') {
# what to do if file empty
print(paste("Error: empty file ", filename))
return (FALSE);
} else {
#dat<-read.table(filename, header = TRUE, sep = ",")   #  reads the csv-formatted data from the url
print(paste("Data obtained, found ", length(dat[,1]), " lines - formatting for IHA analysis"))
datv<-as.vector(dat)  # stores the data as a vector
if (is.logical(use_tz)) {
datv$timestamp <- as.POSIXct(datv$timestamp,origin="1970-01-01")
} else {
datv$timestamp <- as.POSIXct(datv$timestamp,origin="1970-01-01", tz = use_tz)
}
f3 <- zoo(datv, order.by = datv$timestamp)
}
unlink('tempfile')
if(outaszoo){
return(f3)
}else{
return(datv)
}
}
fn_storeprop_vahydro1 = function(site = "http://deq2.bse.vt.edu"){
# NOT FINISHED - JUST PASTED CODE
url <- paste(site,"om/remote/setModelData.php?hash=", sep='/');
print (paste("Setting 7Q10 for element ", id, " run id ", rid, " to ", x7q10 , sep = "") )
# building the correct url
ins_url <- paste(url, hash, "&username=", username, "&elementid=", id, "&runid=", rid, "&dataname=7q10&reporting_frequency=single&dataval=", x7q10, "&starttime=1984-10-01&endtime=2005-09-30&temporal_res=water_year", sep = "")
#shell.exec(alf_url)  # opening the webpage
print(ins_url);
readLines(ins_url)
}
dat <- om_get_rundata(352078,601) #automatically cuts out model warm-up periods
dat.df <- data.frame(dat)
View(dat.df)
dat <- om_get_rundata(352078,602) #automatically cuts out model warm-up periods
dat.df <- data.frame(dat)
dat <- om_get_rundata(352078,602) #automatically cuts out model warm-up periods
dat.df <- data.frame(dat)
#
# library(hydrotools)
dat <- om_get_rundata(352078,602) #automatically cuts out model warm-up periods
dat.df <- data.frame(dat)
#
# library(hydrotools)
dat <- om_get_rundata(352078,602) #automatically cuts out model warm-up periods
dat.df <- data.frame(dat)
elid = 352078 #South Fork Powell River - Big Cherry Reservoir
runid = 602
# GET DATA
omsite = site <- "http://deq2.bse.vt.edu"
dat <- fn_get_runfile(elid, runid, site= omsite,  cached = FALSE);
dat <- window(dat, start = as.Date("1984-10-01"), end = as.Date("2014-09-30"));
dat.df <- data.frame(dat)
# library(hydrotools)
dat <- om_get_rundata(352078,602) #automatically cuts out model warm-up periods
dat.df <- data.frame(dat)
elid = 352078 #South Fork Powell River - Big Cherry Reservoir
runid = 602
# GET DATA
omsite = site <- "http://deq2.bse.vt.edu"
dat <- fn_get_runfile(elid, runid, site= omsite,  cached = FALSE);
dat <- window(dat, start = as.Date("1984-10-01"), end = as.Date("2014-09-30"));
dat.df <- data.frame(dat)
# library(hydrotools)
dat <- om_get_rundata(352078,602) #automatically cuts out model warm-up periods
dat.df <- data.frame(dat)
# library(hydrotools)
dat <- om_get_rundata(352078,602) #automatically cuts out model warm-up periods
dat.df <- data.frame(dat)
elid = 352078 #South Fork Powell River - Big Cherry Reservoir
runid = 602
# GET DATA
omsite = site <- "http://deq2.bse.vt.edu"
dat <- fn_get_runfile(elid, runid, site= omsite,  cached = FALSE);
dat <- window(dat, start = as.Date("1984-10-01"), end = as.Date("2014-09-30"));
dat.df <- data.frame(dat)
elid = 352078 #South Fork Powell River - Big Cherry Reservoir
runid = 602
# GET DATA
omsite = site <- "http://deq2.bse.vt.edu"
dat <- fn_get_runfile(elid, runid, site= omsite,  cached = FALSE);
dat.df <- data.frame(dat)
View(dat.df)
# library(hydrotools)
dat <- om_get_rundata(352078,601) #automatically cuts out model warm-up periods
dat.df <- data.frame(dat)
View(dat.df)
#
# library(hydrotools)
dat <- om_get_rundata(352078,601) #automatically cuts out model warm-up periods
dat.df <- data.frame(dat)
View(dat.df)
dat <- om_get_rundata(352078,601) #automatically cuts out model warm-up periods
dat.df <- data.frame(dat)
View(dat.df)

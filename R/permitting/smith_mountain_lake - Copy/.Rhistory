facils$within <- sqldf("SELECT facils_all.*
FROM facils_all
WHERE riverseg
IN (select segs_basin.riverseg from segs_basin)")
facils$within <- sqldf("SELECT facils_all.*
FROM facils_all
WHERE riverseg
IN (select segs_basin.riverseg from segs_basin)")
colnames(facils$within)
rmarkdown::render(
input = "C:/Users/nrf46657/Desktop/GitHub/HARParchive/HARP-2023-Summer/mapping_codeReview.Rmd",
output_file = "C:/Users/nrf46657/Desktop/GitHub/plots/sml_test",
output_format = "word_document",
params = list(
rivseg = "OR4_8271_8120", locality = "NA", region = "Roanoke_1",
type = "facility", model_version = "vahydro-1.0", runid_list = c("runid_400"),
metric_mod= "wd_mgd",
map_type = "region", bbox_type = "auto"
)
)
rmarkdown::render('C:/Users/nrf46657/Desktop/GitHub/vahydro/R/examples/VWP_CIA_Summary.Rmd',
output_file ='C:/Users/nrf46657/Desktop/VWP Modeling/vwp - Smith Mountain Lake WTP/SML_WTP_TE_400',
params = list(doc_title = "VWP CIA Summary - Smith Mountain Lake WTP",
rseg.hydroid = 68223,
fac.hydroid = 72548,
runid.list = c("runid_400"),
rseg.metric.list = c("Qout","l30_Qout","l90_Qout","consumptive_use_frac","wd_cumulative_mgd","ps_cumulative_mgd","wd_mgd","ps_mgd"),
cu_pre_var = "impoundment_Qin",
cu_post_var = "Leesville_Lake_Qout",
cu_model = 252119,
intake_stats_runid = 400,
preferred_runid = "runid_400",
upstream_rseg_ids=c(68193),
downstream_rseg_ids=c(67758),
users_metric = "base_demand_mgy"
)
)
rmarkdown::render('C:/Users/nrf46657/Desktop/GitHub/vahydro/R/examples/VWP_CIA_Summary.Rmd',
output_file ='C:/Users/nrf46657/Desktop/VWP Modeling/vwp - Smith Mountain Lake WTP/SML_WTP_TE_400',
params = list(doc_title = "VWP CIA Summary - Smith Mountain Lake WTP",
rseg.hydroid = 68223,
fac.hydroid = 72548,
runid.list = c("runid_400"),
rseg.metric.list = c("Qout","l30_Qout","l90_Qout","consumptive_use_frac","wd_cumulative_mgd","ps_cumulative_mgd","wd_mgd","ps_mgd"),
cu_pre_var = "impoundment_Qin",
cu_post_var = "Leesville_Lake_Qout",
cu_model = 252119,
intake_stats_runid = 400,
preferred_runid = "runid_400",
upstream_rseg_ids=c(68193),
downstream_rseg_ids=c(67758),
users_metric = "base_demand_mgy"
)
)
rmarkdown::render('C:/Users/nrf46657/Desktop/GitHub/vahydro/R/examples/VWP_CIA_Summary.Rmd',
output_file ='C:/Users/nrf46657/Desktop/VWP Modeling/vwp - Smith Mountain Lake WTP/SML_WTP_TE_400',
params = list(doc_title = "VWP CIA Summary - Smith Mountain Lake WTP",
rseg.hydroid = 68223,
fac.hydroid = 72548,
runid.list = c("runid_400"),
rseg.metric.list = c("Qout","l30_Qout","l90_Qout","consumptive_use_frac","wd_cumulative_mgd","ps_cumulative_mgd","wd_mgd","ps_mgd"),
cu_pre_var = "impoundment_Qin",
cu_post_var = "Leesville_Lake_Qout",
cu_model = 252119,
intake_stats_runid = 400,
preferred_runid = "runid_400",
upstream_rseg_ids=c(68193),
downstream_rseg_ids=c(67758),
users_metric = "base_demand_mgy"
)
)
rmarkdown::render('C:/Users/nrf46657/Desktop/GitHub/vahydro/R/examples/VWP_CIA_Summary.Rmd',
output_file ='C:/Users/nrf46657/Desktop/VWP Modeling/vwp - Smith Mountain Lake WTP/SML_WTP_TE_400',
params = list(doc_title = "VWP CIA Summary - Smith Mountain Lake WTP",
rseg.hydroid = 68223,
fac.hydroid = 72548,
runid.list = c("runid_400"),
rseg.metric.list = c("Qout","l30_Qout","l90_Qout","consumptive_use_frac","wd_cumulative_mgd","ps_cumulative_mgd","wd_mgd","ps_mgd"),
cu_pre_var = "impoundment_Qin",
cu_post_var = "Leesville_Lake_Qout",
cu_model = 252119,
intake_stats_runid = 400,
preferred_runid = "runid_400",
upstream_rseg_ids=c(68193),
downstream_rseg_ids=c(67758),
users_metric = "base_demand_mgy"
)
)
rmarkdown::render(
'C:/Users/nrf46657/Desktop/GitHub/vahydro/R/OWS_summaries/model_run_brief.Rmd',
output_file = 'C:/Users/nrf46657/Desktop/VWP Modeling/vwp - Smith Mountain Lake WTP/te_altavista_v01.docx',
params = list(
doc_title = "Instream Flows Analysis – Altavista",
model_feature = 67758,
scenario = "runid_400", model_version= "vahydro-1.0", cu_pre_var="Qbaseline",
cu_post_var="Qout", table_cols=1,
image_names =c(),
column_descriptions =c()
)
)
library("devtools")
install_github("HARPgroup/openmi-om")
rmarkdown::render(
'C:/Users/nrf46657/Desktop/GitHub/vahydro/R/OWS_summaries/model_run_brief.Rmd',
output_file = 'C:/Users/nrf46657/Desktop/VWP Modeling/vwp - Smith Mountain Lake WTP/te_altavista_v01.docx',
params = list(
doc_title = "Instream Flows Analysis – Altavista",
model_feature = 67758,
scenario = "runid_400", model_version= "vahydro-1.0", cu_pre_var="Qbaseline",
cu_post_var="Qout", table_cols=1,
image_names =c(),
column_descriptions =c()
)
)
rmarkdown::render('C:/Users/nrf46657/Desktop/GitHub/vahydro/R/examples/VWP_CIA_Summary.Rmd',
output_file ='C:/Users/nrf46657/Desktop/VWP Modeling/vwp - Smith Mountain Lake WTP/SML_WTP_TE_QA',
params = list(doc_title = "VWP CIA Summary - Smith Mountain Lake WTP",
rseg.hydroid = 68223,
fac.hydroid = 72548,
runid.list = c("runid_400"),
rseg.metric.list = c("Qout","l30_Qout","l90_Qout","consumptive_use_frac","wd_cumulative_mgd","ps_cumulative_mgd","wd_mgd","ps_mgd"),
intake_stats_runid = 400,
preferred_runid = "runid_400",
upstream_rseg_ids=c(67757,68193,68099,68236,68126,68327,67839,68105,68331,68376,442254),
downstream_rseg_ids=c(67758,68195),
users_metric = "discharge_mgd"
)
)
rmarkdown::render('C:/Users/nrf46657/Desktop/GitHub/vahydro/R/examples/VWP_CIA_Summary.Rmd',
output_file ='C:/Users/nrf46657/Desktop/VWP Modeling/vwp - Smith Mountain Lake WTP/SML_WTP_TE_QA',
params = list(doc_title = "VWP CIA Summary - Smith Mountain Lake WTP",
rseg.hydroid = 68223,
fac.hydroid = 72548,
runid.list = c("runid_400"),
rseg.metric.list = c("Qout","l30_Qout","l90_Qout","consumptive_use_frac","wd_cumulative_mgd","ps_cumulative_mgd","wd_mgd","ps_mgd"),
intake_stats_runid = 400,
preferred_runid = "runid_400",
upstream_rseg_ids=c(67757,68193,68099,68236,68126,68327,67839,68105,68331,68376,442254),
downstream_rseg_ids=c(67758,68195),
users_metric = "discharge_mgd"
)
)
rmarkdown::render('C:/Users/nrf46657/Desktop/GitHub/vahydro/R/examples/VWP_CIA_Summary.Rmd',
output_file ='C:/Users/nrf46657/Desktop/VWP Modeling/vwp - Smith Mountain Lake WTP/SML_WTP_TE_QA',
params = list(doc_title = "VWP CIA Summary - Smith Mountain Lake WTP",
rseg.hydroid = 68223,
fac.hydroid = 72548,
runid.list = c("runid_400"),
rseg.metric.list = c("Qout","l30_Qout","l90_Qout","consumptive_use_frac","wd_cumulative_mgd","ps_cumulative_mgd","wd_mgd","ps_mgd"),
intake_stats_runid = 400,
preferred_runid = "runid_400",
upstream_rseg_ids=c(67757,68193,68099,68236,68126,68327,67839,68105,68331,68376,442254),
downstream_rseg_ids=c(67758,68195),
users_metric = "discharge_mgd"
)
)
rmarkdown::render('C:/Users/nrf46657/Desktop/GitHub/vahydro/R/examples/VWP_CIA_Summary.Rmd',
output_file ='C:/Users/nrf46657/Desktop/VWP Modeling/vwp - Smith Mountain Lake WTP/SML_WTP_TE_QA',
params = list(doc_title = "VWP CIA Summary - Smith Mountain Lake WTP",
rseg.hydroid = 68223,
fac.hydroid = 72548,
runid.list = c("runid_400"),
rseg.metric.list = c("Qout","l30_Qout","l90_Qout","consumptive_use_frac","wd_cumulative_mgd","ps_cumulative_mgd","wd_mgd","ps_mgd"),
intake_stats_runid = 400,
preferred_runid = "runid_400",
upstream_rseg_ids=c(67757,68193,68099,68236,68126,68327,67839,68105,68331,68376,442254),
downstream_rseg_ids=c(67758,68195),
users_metric = "discharge_mgd"
)
)
source("https://raw.githubusercontent.com/HARPgroup/hydro-tools/master/R/om_cu_table.R")
source("https://raw.githubusercontent.com/HARPgroup/hydro-tools/master/R/om_cu_table.R")
View(om_cu_table)
rmarkdown::render('C:/Users/nrf46657/Desktop/GitHub/vahydro/R/examples/VWP_CIA_Summary.Rmd',
output_file ='C:/Users/nrf46657/Desktop/VWP Modeling/vwp - Smith Mountain Lake WTP/SML_WTP_TE_QA',
params = list(doc_title = "VWP CIA Summary - Smith Mountain Lake WTP",
rseg.hydroid = 68223,
fac.hydroid = 72548,
runid.list = c("runid_400"),
rseg.metric.list = c("Qout","l30_Qout","l90_Qout","consumptive_use_frac","wd_cumulative_mgd","ps_cumulative_mgd","wd_mgd","ps_mgd"),
intake_stats_runid = 400,
preferred_runid = "runid_400",
upstream_rseg_ids=c(67757,68193,68099,68236,68126,68327,67839,68105,68331,68376,442254),
downstream_rseg_ids=c(67758,68195),
users_metric = "discharge_mgd"
)
)
rmarkdown::render('C:/Users/nrf46657/Desktop/GitHub/vahydro/R/examples/VWP_CIA_Summary.Rmd',
output_file ='C:/Users/nrf46657/Desktop/VWP Modeling/vwp - Smith Mountain Lake WTP/SML_WTP_TE_QA',
params = list(doc_title = "VWP CIA Summary - Smith Mountain Lake WTP",
rseg.hydroid = 68223,
fac.hydroid = 72548,
runid.list = c("runid_400"),
rseg.metric.list = c("Qout","l30_Qout","l90_Qout","consumptive_use_frac","wd_cumulative_mgd","ps_cumulative_mgd","wd_mgd","ps_mgd"),
intake_stats_runid = 400,
preferred_runid = "runid_400",
upstream_rseg_ids=c(67757,68193,68099,68236,68126,68327,67839,68105,68331,68376,442254),
downstream_rseg_ids=c(67758,68195),
users_metric = "ps_mgd"
)
)
rmarkdown::render('C:/Users/nrf46657/Desktop/GitHub/vahydro/R/examples/VWP_CIA_Summary.Rmd',
output_file ='C:/Users/nrf46657/Desktop/VWP Modeling/vwp - Smith Mountain Lake WTP/SML_WTP_TE_400',
params = list(doc_title = "VWP CIA Summary - Bedford Regional Water Authority (BRWA) - Smith Mountain Lake WTP",
rseg.hydroid = 68223,
fac.hydroid = 72548,
runid.list = c("runid_400"),
cu_pre_var = "impoundment_Qin",
cu_post_var = "Leesville_Lake_Qout",
cu_model = 252119,
intake_stats_runid = 400,
preferred_runid = "runid_400",
upstream_rseg_ids=c(68193),
downstream_rseg_ids=c(67758),
users_metric = "base_demand_mgy"
)
)
rmarkdown::render('C:/Users/nrf46657/Desktop/GitHub/vahydro/R/examples/VWP_CIA_Summary.Rmd',
output_file ='C:/Users/nrf46657/Desktop/VWP Modeling/vwp - Smith Mountain Lake WTP/SML_WTP_TE_400',
params = list(doc_title = "VWP CIA Summary - Bedford Regional Water Authority (BRWA) - Smith Mountain Lake WTP",
rseg.hydroid = 68223,
fac.hydroid = 72548,
runid.list = c("runid_400"),
rseg.metric.list = c("Qout","l30_Qout","l90_Qout","consumptive_use_frac","wd_cumulative_mgd","ps_cumulative_mgd","wd_mgd","ps_mgd"),
cu_pre_var = "impoundment_Qin",
cu_post_var = "Leesville_Lake_Qout",
cu_model = 252119,
intake_stats_runid = 400,
preferred_runid = "runid_400",
upstream_rseg_ids=c(68193),
downstream_rseg_ids=c(67758),
users_metric = "base_demand_mgy"
)
)
basepath<-'/var/www/R'
source('/var/www/R/config.R')
source(paste(hydro_tools,"/R/mapgen_facdown.R",sep=""))
hydro_tools
# source(paste(hydro_tools,"/R/mapgen_facdown.R",sep=""))
source("C:/Users/nrf46657/Desktop/GitHub/hydrotools.Rcheck/00_pkg_src/hydrotools/GIS_functions/deprecated_mapgen_scripts/mapgen_facdown.R")
# source(paste(hydro_tools,"/R/mapgen_facdown.R",sep=""))
source("C:/Users/nrf46657/Desktop/GitHub/hydrotools.Rcheck/00_pkg_src/hydrotools/GIS_functions/deprecated_mapgen_scripts/mapgen_facdown.R")
map_out <- facmap(facility_hydroid = 72548, scaler = 0.16, plot_zoom = 12,  site = "XXXXX", export_path = "C:/Users/nrf46657/Desktop/GitHub/plots/")
# map_out <- facmap(facility_hydroid = 72548, scaler = 0.16, plot_zoom = 12,  site = "XXXXX", export_path = "C:/Users/nrf46657/Desktop/GitHub/plots/")
map_out <- facmap(facility_hydroid = 72548, site = "XXXXX", export_path = "C:/Users/nrf46657/Desktop/GitHub/plots/")
library(dataRetrieval)
library(nhdplusTools)
library(sf)
library(ggplot2)
library(ggmap)
library(ggsn)
library(ggspatial)
source("https://raw.githubusercontent.com/HARPgroup/hydro-tools/master/GIS_functions/model_geoprocessor.R")
source("https://raw.githubusercontent.com/HARPgroup/hydro-tools/master/R/om_vahydro_metric_grid.R")
basepath='/var/www/R'
source('/var/www/R/config.R')
ds <- RomDataSource$new("http://deq1.bse.vt.edu/d.dh", rest_uname)
ds$get_token(rest_pw)
mapgen <- function(start_point = data.frame(lat = 37.2863888889, lon = -80.0758333333, label = "Intake"),
points = data.frame(lat=double(),lon=double(),label=character()),
segswhere = "hydrocode NOT LIKE '%0000_0000'") {
######################################################################
# process points layer
point_layer =  st_point(c(points$lon[1], points$lat[1]))
if (length(points[,1]) > 1) {
for (i in 2:length(points[,1])) {
point <- points[i,]
point = st_point(c(point$lon[1], point$lat[1]))
point_layer = c(point_layer, point)
}
}
point_layer = st_sfc(point_layer)
st_crs(point_layer) <- 4326
points_labels <- as.data.frame(sf::st_coordinates(point_layer))
points_labels$NAME <- points$label
######################################################################
# process intake point
start_point_layer <- st_sf(id = 1, geom = st_sfc(st_point(c(start_point$lon, start_point$lat)), crs = 4326))
start_point_labels <- as.data.frame(sf::st_coordinates(start_point_layer))
start_point_labels$NAME <- start_point$label
sf_use_s2(FALSE) # switch off Spherical geometry (s2)
domain <- st_buffer(st_as_sfc(st_bbox(start_point_layer)), .2)
nhd  <- plot_nhdplus(bbox = st_bbox(domain), actually_plot = FALSE)
sf_bbox <- st_bbox(nhd$flowline)
ggmap_bbox <- setNames(sf_bbox, c("left", "bottom", "right", "top"))
basemap_toner <- get_map(source = "stamen", maptype = "toner", location = ggmap_bbox, zoom = 12)
toner_map <- ggmap(basemap_toner)
# basemap_terrain <- get_map(source = "stamen", maptype = "terrain-lines", location = ggmap_bbox, zoom = 11)
# terrain_map <- ggmap(basemap_terrain)
######################################################################
# process rseg layer
scenario <- c("vahydro-1.0","runid_11")
rsegs_sp <- model_geoprocessor(ds,scenario,segswhere)
rsegs_sf <- st_as_sf(rsegs_sp)
st_crs(rsegs_sf) <- 4326
rsegs_centroids <- rgeos::gCentroid(rsegs_sp,byid=TRUE)
rsegs_labels <- as.data.frame(sf::st_coordinates(st_as_sf(rsegs_centroids)))
rsegs_labels$NAME <- rsegs_sf$riverseg
######################################################################
# generate map gg object
map_gg <- toner_map +
geom_sf(data = rsegs_sf, inherit.aes = FALSE, color = "darkgoldenrod4", fill = NA, size = 2) +
geom_sf(data = nhd$flowline,inherit.aes = FALSE,color = "blue", fill = NA, size = 0.5) +
geom_sf(data = nhd$network_wtbd,inherit.aes = FALSE,color = "blue", fill = NA, size = 1) +
geom_sf(data = nhd$off_network_wtbd,inherit.aes = FALSE,color = "blue", fill = NA, size = 1) +
# geom_sf(data = nhd$catchment,inherit.aes = FALSE,color = "blue", fill = NA, size = 1) +
geom_sf(data = start_point_layer, inherit.aes = FALSE, color = "black", size = 10, pch =18) +
geom_sf(data = point_layer, inherit.aes = FALSE, color = "white", fill = "black", size = 10, pch = 21) +
theme(text = element_text(size = 30),axis.title.x=element_blank(),axis.title.y=element_blank()) +
# plot labels
geom_text(data = rsegs_labels, aes(X, Y, label = NAME), colour = "darkgoldenrod4", size = 8) +
geom_label(data = start_point_labels, aes(X, Y, label = NAME), colour = "black", size = 10, nudge_x = -0.019, nudge_y = 0.006) +
geom_label(data = points_labels, aes(X, Y, label = NAME), colour = "black", size = 10, nudge_x = -0.033, nudge_y = 0.005) +
# scalebar
ggsn::scalebar(nhd$flowline, location = 'bottomleft', dist = 2, dist_unit = 'mi',transform = TRUE, model = 'WGS84',st.bottom=FALSE, st.size=12) +
# north arrow
ggspatial::annotation_north_arrow(which_north = "grid", location = "tr",height = unit(4, "cm"),width = unit(3, "cm"), style = north_arrow_orienteering(text_size = 20))
return(map_gg)
}
points = data.frame(lat=c(37.111666666667),
lon=c(-79.632222222222),
label=c("BRWA WTP Facility")
)
map_gg <- mapgen(start_point = data.frame(lat = 37.121388888900, lon = -79.646944444400, label = "BRWA Smith Mountain Lake Intake"),
points = points)
points
map_gg <- mapgen(start_point = data.frame(lat = 37.121388888900, lon = -79.646944444400, label = "BRWA Smith Mountain Lake Intake"),
points = points)
mapgen <- function(start_point = data.frame(lat = 37.2863888889, lon = -80.0758333333, label = "Intake"),
points = data.frame(lat=double(),lon=double(),label=character()),
segswhere = "hydrocode NOT LIKE '%0000_0000'") {
######################################################################
# process points layer
point_layer =  st_point(c(points$lon[1], points$lat[1]))
if (length(points[,1]) > 1) {
for (i in 2:length(points[,1])) {
point <- points[i,]
point = st_point(c(point$lon[1], point$lat[1]))
point_layer = c(point_layer, point)
}
}
point_layer = st_sfc(point_layer)
st_crs(point_layer) <- 4326
points_labels <- as.data.frame(sf::st_coordinates(point_layer))
points_labels$NAME <- points$label
######################################################################
# process intake point
start_point_layer <- st_sf(id = 1, geom = st_sfc(st_point(c(start_point$lon, start_point$lat)), crs = 4326))
start_point_labels <- as.data.frame(sf::st_coordinates(start_point_layer))
start_point_labels$NAME <- start_point$label
sf_use_s2(FALSE) # switch off Spherical geometry (s2)
domain <- st_buffer(st_as_sfc(st_bbox(start_point_layer)), .2)
nhd  <- plot_nhdplus(bbox = st_bbox(domain), actually_plot = FALSE)
sf_bbox <- st_bbox(nhd$flowline)
ggmap_bbox <- setNames(sf_bbox, c("left", "bottom", "right", "top"))
basemap_toner <- get_map(source = "stamen", maptype = "toner", location = ggmap_bbox, zoom = 12)
toner_map <- ggmap(basemap_toner)
# basemap_terrain <- get_map(source = "stamen", maptype = "terrain-lines", location = ggmap_bbox, zoom = 11)
# terrain_map <- ggmap(basemap_terrain)
######################################################################
# process rseg layer
scenario <- c("vahydro-1.0","runid_400")
rsegs_sp <- model_geoprocessor(ds,scenario,segswhere)
rsegs_sf <- st_as_sf(rsegs_sp)
st_crs(rsegs_sf) <- 4326
rsegs_centroids <- rgeos::gCentroid(rsegs_sp,byid=TRUE)
rsegs_labels <- as.data.frame(sf::st_coordinates(st_as_sf(rsegs_centroids)))
rsegs_labels$NAME <- rsegs_sf$riverseg
######################################################################
# generate map gg object
map_gg <- toner_map +
geom_sf(data = rsegs_sf, inherit.aes = FALSE, color = "darkgoldenrod4", fill = NA, size = 2) +
geom_sf(data = nhd$flowline,inherit.aes = FALSE,color = "blue", fill = NA, size = 0.5) +
geom_sf(data = nhd$network_wtbd,inherit.aes = FALSE,color = "blue", fill = NA, size = 1) +
geom_sf(data = nhd$off_network_wtbd,inherit.aes = FALSE,color = "blue", fill = NA, size = 1) +
# geom_sf(data = nhd$catchment,inherit.aes = FALSE,color = "blue", fill = NA, size = 1) +
geom_sf(data = start_point_layer, inherit.aes = FALSE, color = "black", size = 10, pch =18) +
geom_sf(data = point_layer, inherit.aes = FALSE, color = "white", fill = "black", size = 10, pch = 21) +
theme(text = element_text(size = 30),axis.title.x=element_blank(),axis.title.y=element_blank()) +
# plot labels
geom_text(data = rsegs_labels, aes(X, Y, label = NAME), colour = "darkgoldenrod4", size = 8) +
geom_label(data = start_point_labels, aes(X, Y, label = NAME), colour = "black", size = 10, nudge_x = -0.019, nudge_y = 0.006) +
geom_label(data = points_labels, aes(X, Y, label = NAME), colour = "black", size = 10, nudge_x = -0.033, nudge_y = 0.005) +
# scalebar
ggsn::scalebar(nhd$flowline, location = 'bottomleft', dist = 2, dist_unit = 'mi',transform = TRUE, model = 'WGS84',st.bottom=FALSE, st.size=12) +
# north arrow
ggspatial::annotation_north_arrow(which_north = "grid", location = "tr",height = unit(4, "cm"),width = unit(3, "cm"), style = north_arrow_orienteering(text_size = 20))
return(map_gg)
}
points = data.frame(lat=c(37.111666666667),
lon=c(-79.632222222222),
label=c("BRWA WTP Facility")
)
map_gg <- mapgen(start_point = data.frame(lat = 37.121388888900, lon = -79.646944444400, label = "BRWA Smith Mountain Lake Intake"),
points = points)
points
# process points layer
point_layer =  st_point(c(points$lon[1], points$lat[1]))
if (length(points[,1]) > 1) {
for (i in 2:length(points[,1])) {
point <- points[i,]
point = st_point(c(point$lon[1], point$lat[1]))
point_layer = c(point_layer, point)
}
}
point_layer = st_sfc(point_layer)
st_crs(point_layer) <- 4326
points_labels <- as.data.frame(sf::st_coordinates(point_layer))
points_labels$NAME <- points$label
points_labels
# process intake point
start_point_layer <- st_sf(id = 1, geom = st_sfc(st_point(c(start_point$lon, start_point$lat)), crs = 4326))
start_point_labels <- as.data.frame(sf::st_coordinates(start_point_layer))
start_point_labels$NAME <- start_point$label
start_point = data.frame(lat = 37.121388888900, lon = -79.646944444400, label = "BRWA Smith Mountain Lake Intake")
# process intake point
start_point_layer <- st_sf(id = 1, geom = st_sfc(st_point(c(start_point$lon, start_point$lat)), crs = 4326))
start_point_labels <- as.data.frame(sf::st_coordinates(start_point_layer))
start_point_labels$NAME <- start_point$label
start_point_labels
sf_use_s2(FALSE) # switch off Spherical geometry (s2)
domain <- st_buffer(st_as_sfc(st_bbox(start_point_layer)), .2)
nhd  <- plot_nhdplus(bbox = st_bbox(domain), actually_plot = FALSE)
sf_bbox <- st_bbox(nhd$flowline)
sf_bbox
ggmap_bbox <- setNames(sf_bbox, c("left", "bottom", "right", "top"))
basemap_toner <- get_map(source = "stamen", maptype = "toner", location = ggmap_bbox, zoom = 12)
toner_map <- ggmap(basemap_toner)
toner_map
scenario <- c("vahydro-1.0","runid_400")
rsegs_sp <- model_geoprocessor(ds,scenario,segswhere)
rsegs_sf <- st_as_sf(rsegs_sp)
st_crs(rsegs_sf) <- 4326
######################################################################
# process rseg layer
scenario <- c("vahydro-1.0","runid_400")
rsegs_sp <- model_geoprocessor(ds,scenario,segswhere)
segswhere = "hydrocode NOT LIKE '%0000_0000'"
rsegs_sp <- model_geoprocessor(ds,scenario,segswhere)
scenario
ds
segswhere
rsegs_sp <- model_geoprocessor(ds,scenario,segswhere)
watershed_feature$geom
######################################################################
# process rseg layer
# model_version <- scenario_info[1]
# runid <- scenario_info[2]
source("https://raw.githubusercontent.com/HARPgroup/hydro-tools/f6eec97784a1a235f9eefd5e8b776cff469a6938/GIS_functions/model_geoprocessor.R")
scenario <- c("vahydro-1.0","runid_400")
rsegs_sp <- model_geoprocessor(ds,scenario,segswhere)
######################################################################
# process rseg layer
# model_version <- scenario_info[1]
# runid <- scenario_info[2]
source("C:/Users/nrf46657/Desktop/GitHub/vahydro/R/permitting/smith_mountain_lake/model_geoprocessor.R")
scenario <- c("vahydro-1.0","runid_400")
rsegs_sp <- model_geoprocessor(ds,scenario,segswhere)
scenario_info
segswhere
scenario_info=scenario
model_version <- scenario_info[1]
runid <- scenario_info[2]
model_data <- data.frame(
'model_version' = c(model_version),
'runid' = c(runid),
'metric' = c('Qout'),
'runlabel' = c('Qout')
)
model_data <- om_vahydro_metric_grid(metric, model_data, ds = ds)
watersheds <- sqldf(paste0("
SELECT *
FROM model_data
WHERE ",segswhere,";
"))
#####################################################################
# retrieve & format geometry data
watershed_feature <- RomFeature$new(ds, list(hydroid = watersheds$featureid[1]), TRUE)
watersheds$featureid
watersheds$featureid[1]
#####################################################################
# retrieve & format geometry data
watershed_feature <- RomFeature$new(ds, list(hydroid = watersheds$featureid[1]), TRUE)
hydroid = watersheds$featureid[1]
hydroid
watershed_feature <- RomFeature$new(ds, hydroid = watersheds$featureid[1], TRUE)
watershed_feature <- RomFeature$new(ds, list=hydroid = watersheds$featureid[1]), TRUE)
watershed_feature <- RomFeature$new(ds, list(hydroid = watersheds$featureid[1]), TRUE)
RomFeature
watersheds$featureid[1]
list(hydroid = watersheds$featureid[1])
watershed_feature <- RomFeature$new(ds, watersheds$featureid[1], TRUE)
watersheds$featureid[1]
watershed_feature <- RomFeature$new(ds, watersheds$featureid[1], TRUE)
#####################################################################
# retrieve & format geometry data
# watershed_feature <- RomFeature$new(ds, list(hydroid = watersheds$featureid[1]), TRUE)
watershed_feature <- RomFeature$new(ds, list(hydroid = watersheds$featureid[1]), TRUE)
watershed_wkt <- watershed_feature$geom
polygons_sp <- sp::SpatialPolygonsDataFrame(readWKT(watershed_wkt), data=data.frame(hydrocode=watersheds$hydrocode[1],riverseg=watersheds$riverseg[1]))
watershed_wkt
watershed_feature
watershed_wkt <- watershed_feature$geom
View(watershed_feature)
watershed_feature$geom
#####################################################################
# retrieve & format geometry data
# watershed_feature <- RomFeature$new(ds, list(hydroid = watersheds$featureid[1]), TRUE)
watershed_feature <- RomFeature$new(ds, list(hydroid = watersheds$featureid[2]), TRUE)
watershed_wkt <- watershed_feature$geom
watershed_wkt
rsegs_sp <- model_geoprocessor(ds,scenario,segswhere)
